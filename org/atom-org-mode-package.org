
* Atom org-mode Package

In order to maintain compatibility, the Atom =org-mode= package will follow the syntax specification[fn:1][fn:2] provided on [[http://orgmode.org][orgmode.org]].

* Package Files

- [[file:../README.md][README.md]]

  # Link to [[file:atom-org-mode-package.org::README.md][README.md Section]]

- [[file:../package.json][package.json]]

  # Link to [[file:atom-org-mode-package.org::package.json][package.json Section]]

- [[file:../coffeelint.json][coffeelint.json]]

  # Link to [[file:atom-org-mode-package.org::coffeelint.json][coffeelint.json Section]]

- [[file:../grammars/org-mode.cson][org-mode.cson]]

  # Link to [[file:atom-org-mode-package.org::org-mode.cson][org-mode.cson Section]]

- [[file:../grammars/shell-unix-bash-org-mode.cson][shell-unix-bash-org-mode.cson]]

  # Link to [[file:atom-org-mode-package.org::shell-unix-bash-org-mode.cson][shell-unix-bash-org-mode.cson Section]]

- [[file:../styles/org-mode.less][org-mode.less]]

  # Link to [[file:atom-org-mode-package.org::org-mode.less][shell-unix-bash-org-mode.less Section]]

* Exported Files                                                   :noexport:

** styles

*** org-mode.less
:PROPERTIES:
:ID:       845DF488-2DEB-4F11-911C-D036DDDF66DC
:END:

# Tangle file with C-u C-c C-v t

#+BEGIN_SRC css  :eval never :tangle ../styles/org-mode.less :mkdirp yes 
  // The ui-variables file is provided by base themes provided by Atom.
  //
  // See https://github.com/atom/atom-dark-ui/blob/master/styles/ui-variables.less
  // for a full listing of what's available.
  @import "ui-variables";

  @default-very-light-gray: #c5c8c6;
  @default-light-gray: #969896;
  @default-gray: #373b41;
  @default-dark-gray: #282a2e;
  @default-very-dark-gray: #1d1f21;

  @default-cyan: cyan;
  @default-blue: blue;
  @default-purple: purple;
  @default-green: green;
  @default-red: red;
  @default-orange: orange;
  @default-light-orange: #ffd280;


  .grammar-tests {
  }


  .syntax--bold.syntax--org-mode  {
    color: lighten(@syntax-text-color, 15%);
    font-weight: bold;
  }

  .syntax--italic.syntax--org-mode  {
    // color: lighten(@syntax-text-color, 15%);
    font-style: italic;
  }

  .syntax--underline.syntax--org-mode  {
    // color: lighten(@syntax-text-color, 15%);
    text-decoration: underline;
  }

  .syntax--strike.syntax--org-mode  {
    // color: lighten(@default-red, 25%);
    text-decoration: line-through;
    font-weight: 100;
  }

  .syntax--leading-star.syntax--org-mode  {
    color: @syntax-invisible-character-color;
    &:hover {
      color: multiply(@syntax-invisible-character-color, @syntax-invisible-character-color);
    }
  }

  .syntax--heading-1.syntax--org-mode  {
     font-weight: bolder;
  }

   .syntax--heading-2.syntax--org-mode  {
     font-weight: bolder;
  }

  .syntax--heading-3.syntax--org-mode  {
    font-weight: bolder;
  }

  .syntax--heading-4.syntax--org-mode  {
    font-weight: bolder;
  }

  .syntax--heading-5.syntax--org-mode  {
    font-weight: bolder;
  }

  .syntax--heading-6.syntax--org-mode  {
    font-weight: bolder;
  }

  .syntax--heading-7.syntax--org-mode  {
    font-weight: bolder;
  }

  .syntax--heading-8.syntax--org-mode  {
    font-weight: bolder;
  }

  .syntax--heading-9.syntax--org-mode  {
    font-weight: bolder;
  }

  .syntax--variable.syntax--checkbox.syntax--list.syntax--org-mode {
    font-weight: bolder;
  }

  .syntax--variable.syntax--ordered.syntax--list.syntax--org-mode {
    // color: darken(@syntax-text-color, 11%);
    font-weight: 500;
    &:hover {
      font-weight: bolder;
    }
  }

  .syntax--variable.syntax--unordered.syntax--list.syntax--org-mode {
    // color: darken(@syntax-text-color, 11%);
    font-weight: 500;
    &:hover {
      font-weight: bolder;
    }
  }

  .syntax--constant.syntax--task.syntax--status.syntax--todo.syntax--org-mode {
    //color: darken(@syntax-background-color, 15%);
    background-color: darken(@syntax-background-color, 5%);
    font-family: monospace;
    padding-left: 5px;
    padding-right: 5px;
    border-radius: 5px;
  }

  .syntax--constant.syntax--task.syntax--status.syntax--done.syntax--org-mode {
    color: @syntax-invisible-character-color;
    background-color: darken(@syntax-background-color, 1%);
    font-family: monospace;
    padding-left: 5px;
    padding-right: 5px;
    border-radius: 5px;
  }

  .syntax--punctuation.syntax--definition.syntax--quote.syntax--org-mode {

    color: @syntax-invisible-character-color;

    &:hover {
      color: multiply(@syntax-invisible-character-color, @syntax-invisible-character-color);
    }
  }

  .syntax--markup.syntax--quote.syntax--org-mode {
     font-weight: 100;
     color: darken(@syntax-text-color, 20%);
     &::before {
       content: "  ";
     }
  }

  .syntax--string.syntax--unquoted.syntax--org-mode {
    font-weight: 100;
    color: @syntax-text-color;
  }

  .syntax--punctuation.syntax--definition.syntax--string.syntax--org-mode {
    color: @syntax-invisible-character-color;

    &:hover {
      color: multiply(@syntax-invisible-character-color, @syntax-invisible-character-color);
    }
  }

  // punctuation.definition.entity
  .syntax--punctuation.syntax--definition.syntax--character.syntax--org-mode {
    color: @syntax-invisible-character-color;
    font-style: normal;
    font-weight: 100;

    &:hover {
      color: multiply(@syntax-invisible-character-color, @syntax-invisible-character-color);
    }
  }

  .syntax--markup.syntax--code.syntax--line.syntax--org-mode {
    font-family: serif;
    // font-weight: lighter;
  }

  .syntax--markup.syntax--verbatim.syntax--org-mode {
    // color: lighten(blue, 20%);
    font-family: monospace;
  }
  .syntax--border.syntax--pipe.syntax--outer {
    color: multiply(@syntax-invisible-character-color, gray);
    font-weight: bold;
  }
  .syntax--border.syntax--header {
    color: multiply(@syntax-invisible-character-color, gray);
    font-weight: bold;
    text-decoration: line-through;
  }

  .syntax--border.syntax--pipe.syntax--inner {
    color: multiply(@syntax-invisible-character-color, gray);
    font-weight: bold;
  }

  .syntax--table {
      // background-color: lighten(@syntax-background-color, 2%);
  }

  .syntax--code-block.syntax--type.syntax--org-mode {
    color: @syntax-invisible-character-color;
    font-style: italic;
    &:hover {
      color: multiply(@syntax-invisible-character-color, @syntax-invisible-character-color);
      font-style: normal;
      font-weight: bold;
    }

  }

  .syntax--code-block.syntax--code-block-headers.syntax--org-mode {
    color: @syntax-invisible-character-color;
    font-style: italic;
    &:hover {
      color: multiply(@syntax-invisible-character-color, @syntax-invisible-character-color);
      font-style: normal;
    }

  }
#+END_SRC

** grammars

*** shell-unix-bash-org-mode.cson
:PROPERTIES:
:ID:       72AAECB5-1ECD-40D5-A38E-9DF98C7794E8
:END:

# Tangle file with C-u C-c C-v t

#+BEGIN_SRC javascript :eval never :tangle ../grammars/shell-unix-bash-org-mode.cson :mkdirp yes 
  'scopeName': 'source.shell-org-mode'
  'name': 'Shell Script - Org-Mode Syntax'
  'fileTypes': [
    'sh'
    'bash'
    'ksh'
    'zsh'
    'zsh-theme'
    'zshenv'
    'zlogin'
    'zlogout'
    'zprofile'
    'zshrc'
    'bashrc'
    'bash_aliases'
    'bash_profile'
    'bash_login'
    'profile'
    'bash_logout'
    '.textmate_init'
    'npmrc'
    'PKGBUILD'
    'install'
    'cygport'
    'bats'
    'ebuild'
  ]
  'firstLineMatch': '''(?x)
    # Hashbang
    ^\\#!.*(?:\\s|\\/)
      (?:bash|zsh|sh|tcsh|ksh|dash|ash|csh|rc)
    (?:$|\\s)
    |
    # Modeline
    (?i:
      # Emacs
      -\\*-(?:\\s*(?=[^:;\\s]+\\s*-\\*-)|(?:.*?[;\\s]|(?<=-\\*-))mode\\s*:\\s*)
        (?:shell-script|sh)
      (?=[\\s;]|(?<![-*])-\\*-).*?-\\*-
      |
      # Vim
      (?:(?:\\s|^)vi(?:m[<=>]?\\d+|m)?|\\sex)(?=:(?=\\s*set?\\s[^\\n:]+:)|:(?!\\s* set?\\s))(?:(?:\\s|\\s*:\\s*)\\w*(?:\\s*=(?:[^\\n\\\\\\s]|\\\\.)*)?)*[\\s:](?:filetype|ft|syntax)\\s*=
        sh
      (?=\\s|:|$)
    )
  '''
  'patterns': [
    {
      'include': '#comment'
    }
    {
      'include': '#pipeline'
    }
    {
      'include': '#list'
    }
    {
      'include': '#compound-command'
    }
    {
      'include': '#loop'
    }
    {
      'include': '#string'
    }
    {
      'include': '#function-definition'
    }
    {
      'include': '#variable'
    }
    {
      'include': '#interpolation'
    }
    {
      'include': '#heredoc'
    }
    {
      'include': '#herestring'
    }
    {
      'include': '#redirection'
    }
    {
      'include': '#pathname'
    }
    {
      'include': '#keyword'
    }
    {
      'include': '#support'
    }
  ]
  'repository':
    'case-clause':
      'patterns': [
        {
          'begin': '(?=\\S)'
          'end': ';;'
          'endCaptures':
            '0':
              'name': 'punctuation.terminator.case-clause.shell-org-mode'
          'name': 'meta.scope.case-clause.shell-org-mode'
          'patterns': [
            {
              'begin': '\\(|(?=\\S)'
              'beginCaptures':
                '0':
                  'name': 'punctuation.definition.case-pattern.shell-org-mode'
              'end': '\\)'
              'endCaptures':
                '0':
                  'name': 'punctuation.definition.case-pattern.shell-org-mode'
              'name': 'meta.scope.case-pattern.shell-org-mode'
              'patterns': [
                {
                  'match': '\\|'
                  'name': 'punctuation.separator.pipe-sign.shell-org-mode'
                }
                {
                  'include': '#string'
                }
                {
                  'include': '#variable'
                }
                {
                  'include': '#interpolation'
                }
                {
                  'include': '#pathname'
                }
              ]
            }
            {
              'begin': '(?<=\\))'
              'end': '(?=;;)'
              'name': 'meta.scope.case-clause-body.shell-org-mode'
              'patterns': [
                {
                  'include': '$self'
                }
              ]
            }
          ]
        }
      ]
    'comment':
      'begin': '(^\\s+)?(?<=^|\\W)(?=#)(?!#[{+])'
      'beginCaptures':
        '1':
          'name': 'punctuation.whitespace.comment.leading.shell-org-mode'
      'end': '(?!\\G)'
      'patterns': [
        {
          'begin': '#!'
          'beginCaptures':
            '0':
              'name': 'punctuation.definition.comment.shebang.shell-org-mode'
          'end': '$'
          'name': 'comment.line.number-sign.shebang.shell-org-mode'
        }
        {
          'begin': '#'
          'beginCaptures':
            '0':
              'name': 'punctuation.definition.comment.shell-org-mode'
          'end': '$'
          'name': 'comment.line.number-sign.shell-org-mode'
        }
      ]
    'compound-command':
      'patterns': [
        {
          'begin': '\\[{1,2}'
          'beginCaptures':
            '0':
              'name': 'punctuation.definition.logical-expression.shell-org-mode'
          'end': '\\]{1,2}'
          'endCaptures':
            '0':
              'name': 'punctuation.definition.logical-expression.shell-org-mode'
          'name': 'meta.scope.logical-expression.shell-org-mode'
          'patterns': [
            {
              'include': '#logical-expression'
            }
            {
              'include': '$self'
            }
          ]
        }
        {
          'begin': '\\({2}'
          'beginCaptures':
            '0':
              'name': 'punctuation.definition.string.begin.shell-org-mode'
          'end': '\\){2}'
          'endCaptures':
            '0':
              'name': 'punctuation.definition.string.end.shell-org-mode'
          'name': 'string.other.math.shell-org-mode'
          'patterns': [
            {
              'include': '#math'
            }
          ]
        }
        {
          'begin': '\\('
          'beginCaptures':
            '0':
              'name': 'punctuation.definition.subshell.shell-org-mode'
          'end': '\\)'
          'endCaptures':
            '0':
              'name': 'punctuation.definition.subshell.shell-org-mode'
          'name': 'meta.scope.subshell.shell-org-mode'
          'patterns': [
            {
              'include': '$self'
            }
          ]
        }
        {
          'begin': '(?<=\\s|^){(?=\\s|$)'
          'beginCaptures':
            '0':
              'name': 'punctuation.definition.group.shell-org-mode'
          'end': '(?<=^|;)\\s*(})'
          'endCaptures':
            '1':
              'name': 'punctuation.definition.group.shell-org-mode'
          'name': 'meta.scope.group.shell-org-mode'
          'patterns': [
            {
              'include': '$self'
            }
          ]
        }
      ]
    'function-definition':
      'patterns': [
        {
          'begin': '(?<=^|;|&|\\s)(function)\\s+([^\\s\\\\]+)(?:\\s*(\\(\\)))?'
          'beginCaptures':
            '1':
              'name': 'storage.type.function.shell-org-mode'
            '2':
              'name': 'entity.name.function.shell-org-mode'
            '3':
              'name': 'punctuation.definition.arguments.shell-org-mode'
          'end': ';|&|$'
          'endCaptures':
            '0':
              'name': 'punctuation.definition.function.shell-org-mode'
          'name': 'meta.function.shell-org-mode'
          'patterns': [
            {
              'include': '$self'
            }
          ]
        }
        {
          'begin': '(?<=^|;|&|\\s)([^\\s\\\\=]+)\\s*(\\(\\))'
          'beginCaptures':
            '1':
              'name': 'entity.name.function.shell-org-mode'
            '2':
              'name': 'punctuation.definition.arguments.shell-org-mode'
          'end': ';|&|$'
          'endCaptures':
            '0':
              'name': 'punctuation.definition.function.shell-org-mode'
          'name': 'meta.function.shell-org-mode'
          'patterns': [
            {
              'include': '$self'
            }
          ]
        }
      ]
    'heredoc':
      'patterns': [
        {
          'begin': '(<<)-("|\'|)\\s*(RUBY)(?=\\s|;|&|<|"|\')\\2'
          'beginCaptures':
            '1':
              'name': 'keyword.operator.heredoc.shell-org-mode'
            '3':
              'name': 'keyword.control.heredoc-token.shell-org-mode'
          'end': '^\\t*(RUBY)(?=\\s|;|&|$)'
          'endCaptures':
            '1':
              'name': 'keyword.control.heredoc-token.shell-org-mode'
          'name': 'string.unquoted.heredoc.no-indent.ruby.shell-org-mode'
          'contentName': 'source.ruby.embedded.shell-org-mode'
          'patterns': [
            {
              'include': 'source.ruby'
            }
          ]
        }
        {
          'begin': '(<<)("|\'|)\\s*(RUBY)(?=\\s|;|&|<|"|\')\\2'
          'beginCaptures':
            '1':
              'name': 'keyword.operator.heredoc.shell-org-mode'
            '3':
              'name': 'keyword.control.heredoc-token.shell-org-mode'
          'end': '^(RUBY)(?=\\s|;|&|$)'
          'endCaptures':
            '1':
              'name': 'keyword.control.heredoc-token.shell-org-mode'
          'name': 'string.unquoted.heredoc.ruby.shell-org-mode'
          'contentName': 'source.ruby.embedded.shell-org-mode'
          'patterns': [
            {
              'include': 'source.ruby'
            }
          ]
        }
        {
          'begin': '(<<)-("|\'|)\\s*(PYTHON)(?=\\s|;|&|<|"|\')\\2'
          'beginCaptures':
            '1':
              'name': 'keyword.operator.heredoc.shell-org-mode'
            '3':
              'name': 'keyword.control.heredoc-token.shell-org-mode'
          'end': '^\\t*(PYTHON)(?=\\s|;|&|$)'
          'endCaptures':
            '1':
              'name': 'keyword.control.heredoc-token.shell-org-mode'
          'name': 'string.unquoted.heredoc.no-indent.python.shell-org-mode'
          'contentName': 'source.python.embedded.shell-org-mode'
          'patterns': [
            {
              'include': 'source.python'
            }
          ]
        }
        {
          'begin': '(<<)("|\'|)\\s*(PYTHON)(?=\\s|;|&|<|"|\')\\2'
          'beginCaptures':
            '1':
              'name': 'keyword.operator.heredoc.shell-org-mode'
            '3':
              'name': 'keyword.control.heredoc-token.shell-org-mode'
          'end': '^(PYTHON)(?=\\s|;|&|$)'
          'endCaptures':
            '1':
              'name': 'keyword.control.heredoc-token.shell-org-mode'
          'name': 'string.unquoted.heredoc.python.shell-org-mode'
          'contentName': 'source.python.embedded.shell-org-mode'
          'patterns': [
            {
              'include': 'source.python'
            }
          ]
        }
        {
          'begin': '(<<)-("|\'|)\\s*(APPLESCRIPT)(?=\\s|;|&|<|"|\')\\2'
          'beginCaptures':
            '1':
              'name': 'keyword.operator.heredoc.shell-org-mode'
            '3':
              'name': 'keyword.control.heredoc-token.shell-org-mode'
          'end': '^\\t*(APPLESCRIPT)(?=\\s|;|&|$)'
          'endCaptures':
            '1':
              'name': 'keyword.control.heredoc-token.shell-org-mode'
          'name': 'string.unquoted.heredoc.no-indent.applescript.shell-org-mode'
          'contentName': 'source.applescript.embedded.shell-org-mode'
          'patterns': [
            {
              'include': 'source.applescript'
            }
          ]
        }
        {
          'begin': '(<<)("|\'|)\\s*(APPLESCRIPT)(?=\\s|;|&|<|"|\')\\2'
          'beginCaptures':
            '1':
              'name': 'keyword.operator.heredoc.shell-org-mode'
            '3':
              'name': 'keyword.control.heredoc-token.shell-org-mode'
          'end': '^(APPLESCRIPT)(?=\\s|;|&|$)'
          'endCaptures':
            '1':
              'name': 'keyword.control.heredoc-token.shell-org-mode'
          'name': 'string.unquoted.heredoc.applescript.shell-org-mode'
          'contentName': 'source.applescript.embedded.shell-org-mode'
          'patterns': [
            {
              'include': 'source.applescript'
            }
          ]
        }
        {
          'begin': '(<<)-("|\'|)\\s*(HTML)(?=\\s|;|&|<|"|\')\\2'
          'beginCaptures':
            '1':
              'name': 'keyword.operator.heredoc.shell-org-mode'
            '3':
              'name': 'keyword.control.heredoc-token.shell-org-mode'
          'end': '^\\t*(HTML)(?=\\s|;|&|$)'
          'endCaptures':
            '1':
              'name': 'keyword.control.heredoc-token.shell-org-mode'
          'name': 'string.unquoted.heredoc.no-indent.html.shell-org-mode'
          'contentName': 'text.html.embedded.shell-org-mode'
          'patterns': [
            {
              'include': 'text.html.basic'
            }
          ]
        }
        {
          'begin': '(<<)("|\'|)\\s*(HTML)(?=\\s|;|&|<|"|\')\\2'
          'beginCaptures':
            '1':
              'name': 'keyword.operator.heredoc.shell-org-mode'
            '3':
              'name': 'keyword.control.heredoc-token.shell-org-mode'
          'end': '^(HTML)(?=\\s|;|&|$)'
          'endCaptures':
            '1':
              'name': 'keyword.control.heredoc-token.shell-org-mode'
          'name': 'string.unquoted.heredoc.html.shell-org-mode'
          'contentName': 'text.html.embedded.shell-org-mode'
          'patterns': [
            {
              'include': 'text.html.basic'
            }
          ]
        }
        {
          'begin': '(<<)-("|\'|)\\s*(MARKDOWN)(?=\\s|;|&|<|"|\')\\2'
          'beginCaptures':
            '1':
              'name': 'keyword.operator.heredoc.shell-org-mode'
            '3':
              'name': 'keyword.control.heredoc-token.shell-org-mode'
          'end': '^\\t*(MARKDOWN)(?=\\s|;|&|$)'
          'endCaptures':
            '1':
              'name': 'keyword.control.heredoc-token.shell-org-mode'
          'name': 'string.unquoted.heredoc.no-indent.markdown.shell-org-mode'
          'contentName': 'text.html.markdown.embedded.shell-org-mode'
          'patterns': [
            {
              'include': 'text.html.markdown'
            }
          ]
        }
        {
          'begin': '(<<)("|\'|)\\s*(MARKDOWN)(?=\\s|;|&|<|"|\')\\2'
          'beginCaptures':
            '1':
              'name': 'keyword.operator.heredoc.shell-org-mode'
            '3':
              'name': 'keyword.control.heredoc-token.shell-org-mode'
          'end': '^(MARKDOWN)(?=\\s|;|&|$)'
          'endCaptures':
            '1':
              'name': 'keyword.control.heredoc-token.shell-org-mode'
          'name': 'string.unquoted.heredoc.markdown.shell-org-mode'
          'contentName': 'text.html.markdown.embedded.shell-org-mode'
          'patterns': [
            {
              'include': 'text.html.markdown'
            }
          ]
        }
        {
          'begin': '(<<)-("|\'|)\\s*(TEXTILE)(?=\\s|;|&|<|"|\')\\2'
          'beginCaptures':
            '1':
              'name': 'keyword.operator.heredoc.shell-org-mode'
            '3':
              'name': 'keyword.control.heredoc-token.shell-org-mode'
          'end': '^\\t*(TEXTILE)(?=\\s|;|&|$)'
          'endCaptures':
            '1':
              'name': 'keyword.control.heredoc-token.shell-org-mode'
          'name': 'string.unquoted.heredoc.no-indent.textile.shell-org-mode'
          'contentName': 'text.html.textile.embedded.shell-org-mode'
          'patterns': [
            {
              'include': 'text.html.textile'
            }
          ]
        }
        {
          'begin': '(<<)("|\'|)\\s*(TEXTILE)(?=\\s|;|&|<|"|\')\\2'
          'beginCaptures':
            '1':
              'name': 'keyword.operator.heredoc.shell-org-mode'
            '3':
              'name': 'keyword.control.heredoc-token.shell-org-mode'
          'end': '^(TEXTILE)(?=\\s|;|&|$)'
          'endCaptures':
            '1':
              'name': 'keyword.control.heredoc-token.shell-org-mode'
          'name': 'string.unquoted.heredoc.textile.shell-org-mode'
          'contentName': 'text.html.textile.embedded.shell-org-mode'
          'patterns': [
            {
              'include': 'text.html.textile'
            }
          ]
        }
        {
          'begin': '(<<)-("|\'|)\\s*(SHELL)(?=\\s|;|&|<|"|\')\\2'
          'beginCaptures':
            '1':
              'name': 'keyword.operator.heredoc.shell-org-mode'
            '3':
              'name': 'keyword.control.heredoc-token.shell-org-mode'
          'end': '^\\t*(\\3)(?=\\s|;|&|$)'
          'endCaptures':
            '1':
              'name': 'keyword.control.heredoc-token.shell-org-mode'
          'contentName': 'source.shell.embedded.shell-org-mode'
          'name': 'string.unquoted.heredoc.no-indent.shell.shell-org-mode'
          'patterns': [
            {
              'include': 'source.shell-org-mode'
            }
          ]
        }
        {
          'begin': '(<<)("|\'|)\\s*(SHELL)(?=\\s|;|&|<|"|\')\\2'
          'beginCaptures':
            '1':
              'name': 'keyword.operator.heredoc.shell-org-mode'
            '3':
              'name': 'keyword.control.heredoc-token.shell-org-mode'
          'end': '^(\\3)(?=\\s|;|&|$)'
          'endCaptures':
            '1':
              'name': 'keyword.control.heredoc-token.shell-org-mode'
          'name': 'string.unquoted.heredoc.shell.shell-org-mode'
          'contentName': 'source.shell.embedded.shell-org-mode'
          'patterns': [
            {
              'include': 'source.shell-org-mode'
            }
          ]
        }
        {
          'begin': '(<<)-("|\'|)\\s*\\\\?([^;&<\\s]+)\\2'
          'beginCaptures':
            '1':
              'name': 'keyword.operator.heredoc.shell-org-mode'
            '3':
              'name': 'keyword.control.heredoc-token.shell-org-mode'
          'end': '^\\t*(\\3)(?=\\s|;|&|$)'
          'endCaptures':
            '1':
              'name': 'keyword.control.heredoc-token.shell-org-mode'
          'name': 'string.unquoted.heredoc.no-indent.shell-org-mode'
        }
        {
          'begin': '(<<)("|\'|)\\s*\\\\?([^;&<\\s]+)\\2'
          'beginCaptures':
            '1':
              'name': 'keyword.operator.heredoc.shell-org-mode'
            '3':
              'name': 'keyword.control.heredoc-token.shell-org-mode'
          'end': '^(\\3)(?=\\s|;|&|$)'
          'endCaptures':
            '1':
              'name': 'keyword.control.heredoc-token.shell-org-mode'
          'name': 'string.unquoted.heredoc.shell-org-mode'
        }
      ]
    'herestring':
      'patterns': [
        {
          'begin': '(<<<)\\s*((\'))'
          'beginCaptures':
            '1':
              'name': 'keyword.operator.herestring.shell-org-mode'
            '2':
              'name': 'string.quoted.single.shell-org-mode'
            '3':
              'name': 'punctuation.definition.string.begin.shell-org-mode'
          'end': '(\')'
          'endCaptures':
            '0':
              'name': 'string.quoted.single.shell-org-mode'
            '1':
              'name': 'punctuation.definition.string.end.shell-org-mode'
          'name': 'meta.herestring.shell-org-mode'
          'contentName': 'string.quoted.single.shell-org-mode'
        }
        {
          'begin': '(<<<)\\s*(("))'
          'beginCaptures':
            '1':
              'name': 'keyword.operator.herestring.shell-org-mode'
            '2':
              'name': 'string.quoted.double.shell-org-mode'
            '3':
              'name': 'punctuation.definition.string.begin.shell-org-mode'
          'end': '(")'
          'endCaptures':
            '0':
              'name': 'string.quoted.double.shell-org-mode'
            '1':
              'name': 'punctuation.definition.string.end.shell-org-mode'
          'name': 'meta.herestring.shell-org-mode'
          'contentName': 'string.quoted.double.shell-org-mode'
        }
        {
          'captures':
            '1':
              'name': 'keyword.operator.herestring.shell-org-mode'
            '2':
              'name': 'string.unquoted.herestring.shell-org-mode'
              'patterns': [
                {
                  'include': '$self'
                }
              ]
          'match': '(<<<)\\s*(([^\\s)\\\\]|\\\\.)+)'
          'name': 'meta.herestring.shell-org-mode'
        }
      ]
    'interpolation':
      'patterns': [
        {
          'begin': '\\$\\({2}'
          'beginCaptures':
            '0':
              'name': 'punctuation.definition.string.begin.shell-org-mode'
          'end': '\\){2}'
          'endCaptures':
            '0':
              'name': 'punctuation.definition.string.end.shell-org-mode'
          'name': 'string.other.math.shell-org-mode'
          'patterns': [
            {
              'include': '#math'
            }
          ]
        }
        {
          'begin': '`'
          'beginCaptures':
            '0':
              'name': 'punctuation.definition.string.begin.shell-org-mode'
          'end': '`'
          'endCaptures':
            '0':
              'name': 'punctuation.definition.string.end.shell-org-mode'
          'name': 'string.interpolated.backtick.shell-org-mode'
          'patterns': [
            {
              'match': '\\\\[`\\\\$]'
              'name': 'constant.character.escape.shell-org-mode'
            }
            {
              # Lifted from the #comment section to handle ending on ` instead of $
              'begin': '(?<=\\W)(?=#)(?!#[{+])'
              'beginCaptures':
                '1':
                  'name': 'punctuation.whitespace.comment.leading.shell-org-mode'
              'end': '(?!\\G)'
              'patterns': [
                {
                  'begin': '#'
                  'beginCaptures':
                    '0':
                      'name': 'punctuation.definition.comment.shell-org-mode'
                  'end': '(?=`)'
                  'name': 'comment.line.number-sign.shell-org-mode'
                }
              ]
            }
            {
              'include': '$self'
            }
          ]
        }
        {
          'begin': '\\$\\('
          'beginCaptures':
            '0':
              'name': 'punctuation.definition.string.begin.shell-org-mode'
          'end': '\\)'
          'endCaptures':
            '0':
              'name': 'punctuation.definition.string.end.shell-org-mode'
          'name': 'string.interpolated.dollar.shell-org-mode'
          'patterns': [
            {
              'include': '$self'
            }
          ]
        }
      ]
    'keyword':
      'patterns': [
        {
          'match': '(?<=^|;|&|\\s)(then|else|elif|fi|for|in|do|done|select|case|continue|esac|while|until|return)(?=\\s|;|&|$)'
          'name': 'keyword.control.shell-org-mode'
        }
        {
          'match': '(?<=^|;|&|\\s)(?:export|declare|typeset|local|readonly)(?=\\s|;|&|$)'
          'name': 'storage.modifier.shell-org-mode'
        }
      ]
    'list':
      'patterns': [
        {
          'match': ';|&&|&|\\|\\|'
          'name': 'keyword.operator.list.shell-org-mode'
        }
      ]
    'logical-expression':
      'patterns': [
        {
          'comment': 'do we want a special rule for ( expr )?'
          'match': '=[=~]?|!=?|<|>|&&|\\|\\|'
          'name': 'keyword.operator.logical.shell-org-mode'
        }
        {
          'match': '(?<!\\S)-(nt|ot|ef|eq|ne|l[te]|g[te]|[a-hknoprstuwxzOGLSN])'
          'name': 'keyword.operator.logical.shell-org-mode'
        }
      ]
    'loop':
      'patterns': [
        {
          'begin': '(?<=^|;|&|\\s)(for)\\s+(?=\\({2})'
          'beginCaptures':
            '1':
              'name': 'keyword.control.shell-org-mode'
          'end': '(?<=^|;|&|\\s)done(?=\\s|;|&|$)'
          'endCaptures':
            '0':
              'name': 'keyword.control.shell-org-mode'
          'name': 'meta.scope.for-loop.shell-org-mode'
          'patterns': [
            {
              'include': '$self'
            }
          ]
        }
        {
          'begin': '(?<=^|;|&|\\s)(for)\\s+(.+?)\\s+(in)(?=\\s|;|&|$)'
          'beginCaptures':
            '1':
              'name': 'keyword.control.shell-org-mode'
            '2':
              'name': 'variable.other.loop.shell-org-mode'
              'patterns': [
                {
                  'include': '#string'
                }
              ]
            '3':
              'name': 'keyword.control.shell-org-mode'
          'end': '(?<=^|;|&|\\s)done(?=\\s|;|&|$)'
          'endCaptures':
            '0':
              'name': 'keyword.control.shell-org-mode'
          'name': 'meta.scope.for-in-loop.shell-org-mode'
          'patterns': [
            {
              'include': '$self'
            }
          ]
        }
        {
          'begin': '(?<=^|;|&|\\s)(while|until)(?=\\s|;|&|$)'
          'beginCaptures':
            '1':
              'name': 'keyword.control.shell-org-mode'
          'end': '(?<=^|;|&|\\s)done(?=\\s|;|&|$)'
          'endCaptures':
            '0':
              'name': 'keyword.control.shell-org-mode'
          'name': 'meta.scope.while-loop.shell-org-mode'
          'patterns': [
            {
              'include': '$self'
            }
          ]
        }
        {
          'begin': '(?<=^|;|&|\\s)(select)\\s+((?:[^\\s\\\\]|\\\\.)+)(?=\\s|;|&|$)'
          'beginCaptures':
            '1':
              'name': 'keyword.control.shell-org-mode'
            '2':
              'name': 'variable.other.loop.shell-org-mode'
          'end': '(?<=^|;|&|\\s)(done)(?=\\s|;|&|$)'
          'endCaptures':
            '1':
              'name': 'keyword.control.shell-org-mode'
          'name': 'meta.scope.select-block.shell-org-mode'
          'patterns': [
            {
              'include': '$self'
            }
          ]
        }
        {
          'begin': '(?<=^|;|&|\\s)case(?=\\s|;|&|$)'
          'beginCaptures':
            '0':
              'name': 'keyword.control.shell-org-mode'
          'end': '(?<=^|;|&|\\s)esac(?=\\s|;|&|$)'
          'endCaptures':
            '0':
              'name': 'keyword.control.shell-org-mode'
          'name': 'meta.scope.case-block.shell-org-mode'
          'patterns': [
            {
              'begin': '(?<=^|;|&|\\s)in(?=\\s|;|&|$)'
              'beginCaptures':
                '0':
                  'name': 'keyword.control.shell-org-mode'
              'end': '(?<=^|;|&|\\s)(?=esac(\\s|;|&|$))'
              'name': 'meta.scope.case-body.shell-org-mode'
              'patterns': [
                {
                  'include': '#comment'
                }
                {
                  'include': '#case-clause'
                }
                {
                  'include': '$self'
                }
              ]
            }
            {
              'include': '$self'
            }
          ]
        }
        {
          'begin': '(?<=^|;|&|\\s)if(?=\\s|;|&|$)'
          'beginCaptures':
            '0':
              'name': 'keyword.control.shell-org-mode'
          'end': '(?<=^|;|&|\\s)fi(?=\\s|;|&|$)'
          'endCaptures':
            '0':
              'name': 'keyword.control.shell-org-mode'
          'name': 'meta.scope.if-block.shell-org-mode'
          'patterns': [
            {
              'include': '$self'
            }
          ]
        }
      ]
    'math':
      'patterns': [
        {
          'include': '#variable'
        }
        {
          'match': '\\+{1,2}|-{1,2}|!|~|\\*{1,2}|/|%|<[<=]?|>[>=]?|==|!=|^|\\|{1,2}|&{1,2}|\\?|\\:|,|=|[*/%+\\-&^|]=|<<=|>>='
          'name': 'keyword.operator.arithmetic.shell-org-mode'
        }
        {
          'match': '0[xX][0-9A-Fa-f]+'
          'name': 'constant.numeric.hex.shell-org-mode'
        }
        {
          'match': '0\\d+'
          'name': 'constant.numeric.octal.shell-org-mode'
        }
        {
          'match': '\\d{1,2}#[0-9a-zA-Z@_]+'
          'name': 'constant.numeric.other.shell-org-mode'
        }
        {
          'match': '\\d+'
          'name': 'constant.numeric.integer.shell-org-mode'
        }
      ]
    'pathname':
      'patterns': [
        {
          'match': '(?<=\\s|:|=|^)~'
          'name': 'keyword.operator.tilde.shell-org-mode'
        }
        {
          'match': '\\*|\\?'
          'name': 'keyword.operator.glob.shell-org-mode'
        }
        {
          'begin': '([?*+@!])(\\()'
          'beginCaptures':
            '1':
              'name': 'keyword.operator.extglob.shell-org-mode'
            '2':
              'name': 'punctuation.definition.extglob.shell-org-mode'
          'end': '\\)'
          'endCaptures':
            '0':
              'name': 'punctuation.definition.extglob.shell-org-mode'
          'name': 'meta.structure.extglob.shell-org-mode'
          'patterns': [
            {
              'include': '$self'
            }
          ]
        }
      ]
    'pipeline':
      'patterns': [
        {
          'match': '(?<=^|;|&|\\s)(time)(?=\\s|;|&|$)'
          'name': 'keyword.other.shell-org-mode'
        }
        {
          'match': '[|!]'
          'name': 'keyword.operator.pipe.shell-org-mode'
        }
      ]
    'redirection':
      'patterns': [
        {
          'begin': '[><]\\('
          'beginCaptures':
            '0':
              'name': 'punctuation.definition.string.begin.shell-org-mode'
          'end': '\\)'
          'endCaptures':
            '0':
              'name': 'punctuation.definition.string.end.shell-org-mode'
          'name': 'string.interpolated.process-substitution.shell-org-mode'
          'patterns': [
            {
              'include': '$self'
            }
          ]
        }
        {
          # valid: &>word >&word >word [n]>&[n] [n]<word [n]>word [n]>>word [n]<&word (last one is duplicate)
          'match': '(?<![<>])(&>|\\d*>&\\d*|\\d*(>>|>|<)|\\d*<&|\\d*<>)(?![<>])'
          'name': 'keyword.operator.redirect.shell-org-mode'
        }
      ]
    'string':
      'patterns': [
        {
          'match': '\\\\.'
          'name': 'constant.character.escape.shell-org-mode'
        }
        {
          'begin': '\''
          'beginCaptures':
            '0':
              'name': 'punctuation.definition.string.begin.shell-org-mode'
          'end': '\''
          'endCaptures':
            '0':
              'name': 'punctuation.definition.string.end.shell-org-mode'
          'name': 'string.quoted.single.shell-org-mode'
        }
        {
          'begin': '\\$?"'
          'beginCaptures':
            '0':
              'name': 'punctuation.definition.string.begin.shell-org-mode'
          'end': '"'
          'endCaptures':
            '0':
              'name': 'punctuation.definition.string.end.shell-org-mode'
          'name': 'string.quoted.double.shell-org-mode'
          'patterns': [
            {
              'match': '\\\\[\\$`"\\\\\\n]'
              'name': 'constant.character.escape.shell-org-mode'
            }
            {
              'include': '#variable'
            }
            {
              'include': '#interpolation'
            }
          ]
        }
        {
          'begin': '\\$\''
          'beginCaptures':
            '0':
              'name': 'punctuation.definition.string.begin.shell-org-mode'
          'end': '\''
          'endCaptures':
            '0':
              'name': 'punctuation.definition.string.end.shell-org-mode'
          'name': 'string.quoted.single.dollar.shell-org-mode'
          'patterns': [
            {
              'match': '\\\\(a|b|e|f|n|r|t|v|\\\\|\')'
              'name': 'constant.character.escape.ansi-c.shell-org-mode'
            }
            {
              'match': '\\\\[0-9]{3}'
              'name': 'constant.character.escape.octal.shell-org-mode'
            }
            {
              'match': '\\\\x[0-9a-fA-F]{2}'
              'name': 'constant.character.escape.hex.shell-org-mode'
            }
            {
              'match': '\\\\c.'
              'name': 'constant.character.escape.control-char.shell-org-mode'
            }
          ]
        }
      ]
    'support':
      'patterns': [
        {
          'match': '(?<=^|;|&|\\s)(?::|\\.)(?=\\s|;|&|$)'
          'name': 'support.function.builtin.shell-org-mode'
        }
        {
          'match': '(?<=^|;|&|\\s)(?:alias|bg|bind|break|builtin|caller|cd|command|compgen|complete|dirs|disown|echo|enable|eval|exec|exit|false|fc|fg|getopts|hash|help|history|jobs|kill|let|logout|popd|printf|pushd|pwd|read|readonly|set|shift|shopt|source|suspend|test|times|trap|true|type|ulimit|umask|unalias|unset|wait)(?=\\s|;|&|$)'
          'name': 'support.function.builtin.shell-org-mode'
        }
      ]
    'variable':
      'patterns': [
        {
          'captures':
            '1':
              'name': 'punctuation.definition.variable.shell-org-mode'
          'match': '(\\$)[a-zA-Z_][a-zA-Z0-9_]*'
          'name': 'variable.other.normal.shell-org-mode'
        }
        {
          'captures':
            '1':
              'name': 'punctuation.definition.variable.shell-org-mode'
          'match': '(\\$)[-*@#?$!0_]'
          'name': 'variable.other.special.shell-org-mode'
        }
        {
          'captures':
            '1':
              'name': 'punctuation.definition.variable.shell-org-mode'
          'match': '(\\$)[1-9]'
          'name': 'variable.other.positional.shell-org-mode'
        }
        {
          'begin': '\\${'
          'beginCaptures':
            '0':
              'name': 'punctuation.definition.variable.shell-org-mode'
          'end': '}'
          'endCaptures':
            '0':
              'name': 'punctuation.definition.variable.shell-org-mode'
          'name': 'variable.other.bracket.shell-org-mode'
          'patterns': [
            {
              'match': '!|:[-=?]?|\\*|@|\#\{1,2}|%{1,2}|/' # #{ is escaped to prevent coffeelint complaining about interpolation
              'name': 'keyword.operator.expansion.shell-org-mode'
            }
            {
              'captures':
                '1':
                  'name': 'punctuation.section.array.shell-org-mode'
                '3':
                  'name': 'punctuation.section.array.shell-org-mode'
              'match': '(\\[)([^\\]]+)(\\])'
            }
            {
              'include': '#variable'
            }
            {
              'include': '#string'
            }
          ]
        }
      ]

#+END_SRC

*** org-mode.cson
:PROPERTIES:
:ID:       93C158C1-6209-4A22-9C45-0E46CD7DE030
:END:

# Tangle file with C-u C-c C-v t

#+BEGIN_SRC javascript :eval never :tangle ../grammars/org-mode.cson :mkdirp yes 
  'name': 'Org-Mode Syntax'
  'scopeName': 'source.org-mode'
  'limitLineLength': false
  'fileTypes': [
    'org-mode'
    'org'
  ]
  'patterns': [
    {
      'include': '#comment-line'
    }
    {
      'include': '#comment-block'
    }
    {
      'include': '#example-line'
    }
    {
      'include': '#example-block'
    }
    {
      'include': '#quote-block'
    }
    {
      'include': '#verbatim'
    }
    {
      'include': '#code'
    }
    {
      'include': '#emphasis'
    }
    {
      'include': '#code-block-shell'
    }
    {
      'include': '#code-block-ruby'
    }
    {
      'include': '#code-block-python'
    }
    {
      'include': '#code-block-sql'
    }
    {
      'include': '#code-block-css'
    }
    {
      'include': '#options-line'
    }
    {
      'include': '#keywords-line'
    }
    {
      'include': '#babel-call'
    }

    {
      'begin': '^(\\*{3})(\\*{1})(\\s+)'
      'end': '$'
      'name': 'markup.heading.heading-4.org-mode'
      'captures':
        '1':
          'name': 'leading-star.org-mode'
        '2':
          'name': 'markup.heading.marker.org-mode'
        '3':
          'name': 'markup.heading.space.org-mode'
      'patterns': [
        {
          'include': '#task-status'
        }
        {
          'include': '#code'
        }
        {
          'include': '#verbatim'
        }
        {
          'include': '#emphasis'
        }
      ]
    }

    {
      'begin': '^(\\*{4})(\\*{1})(\\s+)'
      'end': '$'
      'name': 'markup.heading.heading-5.org-mode'
      'captures':
        '1':
          'name': 'leading-star.org-mode'
        '2':
          'name': 'markup.heading.marker.org-mode'
        '3':
          'name': 'markup.heading.space.org-mode'
      'patterns': [
          {
            'include': '#task-status'
          }
          {
            'include': '#code'
          }
          {
            'include': '#verbatim'
          }
          {
            'include': '#emphasis'
          }
        ]
    }

    {
      'begin': '^(\\*{5})(\\*{1})(\\s+)'
      'end': '$'
      'name': 'markup.heading.heading-6.org-mode'
      'captures':
        '1':
          'name': 'leading-star.org-mode'
        '2':
          'name': 'markup.heading.marker.org-mode'
        '3':
          'name': 'markup.heading.space.org-mode'
      'patterns': [
          {
            'include': '#task-status'
          }
          {
            'include': '#code'
          }
          {
            'include': '#verbatim'
          }
          {
            'include': '#emphasis'
          }
        ]
    }

    {
      'begin': '^(\\*{6})(\\*{1})(\\s+)'
      'end': '$'
      'name': 'markup.heading.heading-7.org-mode'
      'captures':
        '1':
          'name': 'leading-star.org-mode'
        '2':
          'name': 'markup.heading.marker.org-mode'
        '3':
          'name': 'markup.heading.space.org-mode'
      'patterns': [
          {
            'include': '#task-status'
          }
          {
            'include': '#code'
          }
          {
            'include': '#verbatim'
          }
          {
            'include': '#emphasis'
          }
        ]
    }
    {
      'begin': '^(-----BEGIN PGP MESSAGE-----)$'
      'end': '^(-----END PGP MESSAGE-----)$'
      'name': 'crypt.pgp.message.string.org-mode'
      'beginCaptures':
        '1':
          'name': 'crypt.pgp.message.begin.string.org-mode'
      'endCaptures':
        '1':
          'name': 'crypt.pgp.message.begin.string.org-mode'
      'patterns': [
      ]
    }


    {
      'match': '^(\\s*\\d+\\.)(\\s+)(([\\\[])([ X-])([\\\]])(\\s))?'
      'captures':
        '1':
          'name': 'variable.ordered.list.org-mode'
        '2':
          'name': 'punctuation.definition.list.space.org-mode'
        '3':
          'name': 'variable.checkbox.list.org-mode'
        '4':
          'name': 'punctuation.definition.checkbox.begin.list.org-mode'
        '5':
          'name': 'checkbox.string.org-mode'
        '6':
          'name': 'punctuation.definition.checkbox.end.list.org-mode'
    }

    {
      'match': '^(\\s+[*]|\\s*[+-])(\\s+)(([\\\[])([ X-])([\\\]])(\\s))?'
      'captures':
        '1':
          'name': 'variable.unordered.list.org-mode'
        '2':
          'name': 'punctuation.definition.list.space.org-mode'
        '3':
          'name': 'variable.checkbox.list.org-mode'
        '4':
          'name': 'punctuation.definition.checkbox.begin.list.org-mode'
        '5':
          'name': 'checkbox.string.org-mode'
        '6':
          'name': 'punctuation.definition.checkbox.end.list.org-mode'
    }

    {
      'begin': '^(?:[ \\t]*)(\\|)'
      'end': '(\\|)?(?:\\s*)$'
      'beginCaptures':
        '1':
          'name': 'border.pipe.outer.org-mode'
      'endCaptures':
        '1':
          'name': 'border.pipe.outer.org-mode'
      'name': 'table.grmtsts'
      'patterns': [
        {
          'match': '(-+(?=[-+|]))([+]?)'
          'captures':
            '1':
              'name': 'border.header.org-mode'
            '2':
              'name': 'border.header.org-mode'
        }
        {
          'match': '\\|'
          'name': 'border.pipe.inner.org-mode'
        }
      ]
    }

    {
      'begin': '^(\\*{1})(\\s+)'
      'end': '$'
      'name': 'markup.heading.heading-1.org-mode'
      'captures':
        '1':
          'name': 'markup.heading.marker.org-mode'
        '2':
          'name': 'markup.heading.space.org-mode'
      'patterns': [
        {
          'include': '#task-status'
        }
        {
          'include': '#code'
        }
        {
          'include': '#verbatim'
        }
        {
          'include': '#emphasis'
        }
      ]
    }

    {
      'begin': '^(\\*{1})(\\*{1})(\\s+)'
      'end': '$'
      'name': 'markup.heading.heading-2.org-mode'
      'captures':
        '1':
          'name': 'leading-star.star-1.org-mode'
        '2':
          'name': 'markup.heading.marker.org-mode'
        '3':
          'name': 'markup.heading.space.org-mode'
      'patterns': [
        {
          'include': '#task-status'
        }
        {
          'include': '#code'
        }
        {
          'include': '#verbatim'
        }
        {
          'include': '#emphasis'
        }
      ]
    }

    {
      'begin': '^(\\*{2})(\\*{1})(\\s+)'
      'end': '$'
      'name': 'markup.heading.heading-3.org-mode'
      'captures':
        '1':
          'name': 'leading-star.org-mode'
        '2':
          'name': 'markup.heading.marker.org-mode'
        '3':
          'name': 'markup.heading.space.org-mode'
      'patterns': [
        {
          'include': '#task-status'
        }
        {
          'include': '#code'
        }
        {
          'include': '#verbatim'
        }
        {
          'include': '#emphasis'
        }
      ]
    }

    {
      'begin': '^(\\*{3})(\\*{1})(\\s+)'
      'end': '$'
      'name': 'markup.heading.heading-4.org-mode'
      'captures':
        '1':
          'name': 'leading-star.org-mode'
        '2':
          'name': 'markup.heading.marker.org-mode'
        '3':
          'name': 'markup.heading.space.org-mode'
      'patterns': [
        {
          'include': '#task-status'
        }
        {
          'include': '#code'
        }
        {
          'include': '#verbatim'
        }
        {
          'include': '#emphasis'
        }
      ]
    }

    {
      'begin': '^(\\*{4})(\\*{1})(\\s+)'
      'end': '$'
      'name': 'markup.heading.heading-5.org-mode'
      'captures':
        '1':
          'name': 'leading-star.org-mode'
        '2':
          'name': 'markup.heading.marker.org-mode'
        '3':
          'name': 'markup.heading.space.org-mode'
      'patterns': [
          {
            'include': '#task-status'
          }
          {
            'include': '#code'
          }
          {
            'include': '#verbatim'
          }
          {
            'include': '#emphasis'
          }
        ]
    }

    {
      'begin': '^(\\*{5})(\\*{1})(\\s+)'
      'end': '$'
      'name': 'markup.heading.heading-6.org-mode'
      'captures':
        '1':
          'name': 'leading-star.org-mode'
        '2':
          'name': 'markup.heading.marker.org-mode'
        '3':
          'name': 'markup.heading.space.org-mode'
      'patterns': [
          {
            'include': '#task-status'
          }
          {
            'include': '#code'
          }
          {
            'include': '#verbatim'
          }
          {
            'include': '#emphasis'
          }
        ]
    }

    {
      'begin': '^(\\*{6})(\\*{1})(\\s+)'
      'end': '$'
      'name': 'markup.heading.heading-7.org-mode'
      'captures':
        '1':
          'name': 'leading-star.org-mode'
        '2':
          'name': 'markup.heading.marker.org-mode'
        '3':
          'name': 'markup.heading.space.org-mode'
      'patterns': [
          {
            'include': '#task-status'
          }
          {
            'include': '#code'
          }
          {
            'include': '#verbatim'
          }
          {
            'include': '#emphasis'
          }
        ]
    }
    {
      'begin': '^(\\*{7})(\\*{1})(\\s+)'
      'end': '$'
      'name': 'markup.heading.heading-8.org-mode'
      'captures':
        '1':
          'name': 'leading-star.org-mode'
        '2':
          'name': 'markup.heading.marker.org-mode'
        '3':
          'name': 'markup.heading.space.org-mode'
      'patterns': [
          {
            'include': '#task-status'
          }
          {
            'include': '#code'
          }
          {
            'include': '#verbatim'
          }
          {
            'include': '#emphasis'
          }
        ]
    }
    {
      'begin': '^(\\*{8})(\\*{1})(\\s+)'
      'end': '$'
      'name': 'markup.heading.heading-9.org-mode'
      'captures':
        '1':
          'name': 'leading-star.org-mode'
        '2':
          'name': 'markup.heading.marker.org-mode'
        '3':
          'name': 'markup.heading.space.org-mode'
      'patterns': [
          {
            'include': '#task-status'
          }
          {
            'include': '#code'
          }
          {
            'include': '#verbatim'
          }
          {
            'include': '#emphasis'
          }
        ]
    }
  ]
  'repository':

    'comment-line':
      'patterns': [
        {
          'begin': '^\\s*#\\s'
          'end': '$'
          'captures':
            '0':
              'name': 'punctuation.definition.comment.org-mode'
          'name': 'comment.line.org-mode'
        }
      ]

    'comment-block':
      'patterns': [
        {
          'begin': '^(?i:\\s*#\\+BEGIN_COMMENT\\s*)'
          'captures':
            '0':
              'name': 'punctuation.definition.comment.org-mode'
          'end': '^(?i:\\s*#\\+END_COMMENT\\s*)'
          'name': 'comment.block.org-mode'
        }
      ]

    'example-line':
      'patterns': [
        {
          'begin': '^\\s*:\\s'
          'end': '$'
          'captures':
            '0':
              'name': 'punctuation.definition.string.org-mode'
          'name': 'string.unquoted.org-mode'
        }
      ]

    'example-block':
      'patterns':[
          {
            'begin': '^(?i:\\s*#\\+BEGIN_EXAMPLE\\s*)'
            'beginCaptures':
              '0':
                'name': 'punctuation.definition.string.org-mode'
            'end': '^(?i:\\s*#\\+END_EXAMPLE\\s*)'
            'endCaptures':
              '0':
                'name': 'punctuation.definition.string.org-mode'
            'contentName': 'string.unquoted.org-mode'
          }
      ]

    'quote-block':
      'patterns': [
        {
          'begin': '^(?i:\\s*#\\+BEGIN_QUOTE\\s*)'
          'beginCaptures':
            '0':
              'name': 'punctuation.definition.quote.org-mode'
          'end': '^(?i:\\s*#\\+END_QUOTE\\s*)'
          'endCaptures':
            '0':
              'name': 'punctuation.definition.quote.org-mode'
          'contentName': 'markup.quote.org-mode'
          'patterns': [
            {
              'include': '#emphasis'
            }
          ]
        }
      ]

    'unordered-list':
      'patterns': [
          {
            'match': '^\\s+([*+-])(\\s+)'
            'captures':
              '1':
                'name': 'punctuation.definition.item.org-mode'
              '2':
                'name': 'punctuation.definition.item.space.org-mode'
          }
      ]

    'emphasis':
      'patterns':[
        {
          'include': '#bold'
        }
        {
          'include': '#italic'
        }
        {
          'include': '#underline'
        }
        {
          'include': '#strike-through'
        }
      ]

    'task-status-todo':
        'patterns': [
            {
              'match': '(?<=[\\\*]\\s)(TODO)\\b'
              'name': 'constant.task.status.todo.org-mode'
            }
        ]

    'task-status-done':
        'patterns': [
            {
              'match': '(?<=[\\\*]\\s)(DONE)\\b'
              'name': 'constant.task.status.done.org-mode'
            }
        ]

    'task-status':
        'patterns': [
            {
              'include': '#task-status-todo'
            }
            {
              'include': '#task-status-done'
            }
        ]

    'code':
        'patterns': [
          {
            'begin': '(?<=^|[^\\w\\d\\~])(\\~)(?!$|\\~|\\s)'
            'beginCaptures':
              '1':
                'name': 'punctuation.definition.character.org-mode'
            'end': '(?<!^|\\s)(\\~)(?=$|[^\\w|\\d])'
            'endCaptures':
              '1':
                'name': 'punctuation.definition.character.org-mode'
            'name': 'markup.raw.code.line.org-mode'

          }
      ]

    'verbatim':
        'patterns': [
          {
            'begin': '(?<=^|[^\\w\\d\\=])(\\=)(?!$|\\=|\\s)'
            'beginCaptures':
              '1':
                'name': 'punctuation.definition.character.org-mode'
            'end': '(?<!^|\\s)(\\=)(?=$|[^\\w|\\d])'
            'endCaptures':
              '1':
                'name': 'punctuation.definition.character.org-mode'
            'name': 'markup.raw.verbatim.org-mode'
          }
      ]

    'bold':
        'patterns': [
          {
            'begin': '(?<=^|[^\\w\\d\\*])(\\*)(?!$|\\*|\\s)'
            'beginCaptures':
              '1':
                'name': 'punctuation.definition.character.org-mode'
            'end': '(?<!^|\\s)(\\*)(?=$|[^\\w|\\d])'
            'endCaptures':
              '1':
                'name': 'punctuation.definition.character.org-mode'
            'name': 'markup.bold.org-mode'
            'patterns': [
              {
                'match': '(&)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)'
                'name': 'constant.character.entity.org-mode'
                'captures':
                  '1':
                    'name': 'punctuation.definition.entity.org-mode'
                  '3':
                    'name': 'punctuation.definition.entity.org-mode'
              }
              {
                'include': '#italic'
              }
              {
                'include': '#underline'
              }
              {
                'include': '#strike-through'
              }
              {
                'include': '#code'
              }
              {
                'include': '#verbatim'
              }
            ]
        }
      ]

    'underline':
      'patterns':[
         {
           'begin': '(?<=^|[^\\w\\d_])(_)(?!$|_|\\s)'
           'beginCaptures':
             '1':
               'name': 'punctuation.definition.character.org-mode'
           'end': '(?<!^|\\s)(_)(?=$|[^\\w|\\d])'
           'endCaptures':
             '1':
               'name': 'punctuation.definition.character.org-mode'
           'name': 'markup.underline.link.org-mode'
           'patterns': [
             {
               'match': '(&)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)'
               'name': 'constant.character.entity.org-mode'
               'captures':
                 '1':
                   'name': 'punctuation.definition.entity.org-mode'
                 '3':
                   'name': 'punctuation.definition.entity.org-mode'
             }
            {
               'include': '#bold'
            }
            {
              'include': '#italic'
            }
            {
              'include': '#strike-through'
            }
            {
              'include': '#code'
            }
            {
              'include': '#verbatim'
            }
           ]
         }

      ]
    'italic':
      'patterns':[
        {
            'begin': '(?<=^|[^\\w\\d\\/])(\\/)(?!$|\\/|\\s)'
            'beginCaptures':
              '1':
                'name': 'punctuation.definition.character.org-mode'
            'end': '(?<!^|\\s)(\\/)(?=$|[^\\w|\\d])'
            'endCaptures':
              '1':
                'name': 'punctuation.definition.character.org-mode'
            'name': 'markup.italic.org-mode'
            'patterns': [
              {
                'match': '(&)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)'
                'name': 'constant.character.entity.org-mode'
                'captures':
                  '1':
                    'name': 'punctuation.definition.entity.org-mode'
                  '3':
                    'name': 'punctuation.definition.entity.org-mode'
              }
              {
                'include': '#bold'
              }
              {
                'include': '#underline'
              }
              {
                'include': '#strike-through'
              }
              {
                'include': '#code'
              }
              {
                'include': '#verbatim'
              }
            ]
          }
      ]

    'strike-through':
      'patterns': [
          {
            'begin': '(?<=^|[^\\w\\d#\\+])(\\+)(?!$|\\+|\\s)'
            'beginCaptures':
              '1':
                'name': 'punctuation.definition.character.org-mode'
            'end': '(?<!^|\\s)(\\+)(?=$|[^\\w|\\d])'
            'endCaptures':
              '1':
                'name': 'punctuation.definition.character.org-mode'
            'name': 'markup.strike.org-mode'
            'patterns': [
              {
                'match': '(&)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)'
                'name': 'constant.character.entity.org-mode'
                'captures':
                  '1':
                    'name': 'punctuation.definition.entity.org-mode'
                  '3':
                    'name': 'punctuation.definition.entity.org-mode'
              }
              {
                'include': '#bold'
              }
              {
                'include': '#italic'
              }
              {
                'include': '#underline'
              }
              {
                'include': '#code'
              }
              {
                'include': '#verbatim'
              }
            ]
          }
      ]

    'code-block-shell':
      'patterns':[
          {
            'begin': '^(\\s*#\\+BEGIN_SRC\\s+)(sh|shell|bash)(\\s+(:\\w+)(\\s+.+)?)*$'
            'beginCaptures':
              '1':
                'name': 'punctuation.definition.string.org-mode'
              '2':
                'name': 'code-block.type.org-mode'
              '3':
                'name': 'code-block.code-block-headers.org-mode'
            'end': '^(?i)(\\s*#\\+END_SRC\\s*)$'
            'endCaptures':
              '0':
                'name': 'punctuation.definition.string.org-mode'
            'contentName': 'source.embedded.shell-org-mode'
            'patterns':[
              {
                'include': 'source.shell-org-mode'
              }
            ]
          }
      ]

    'code-block-ruby':
      'patterns':[
          {
            'begin': '^(\\s*#\\+BEGIN_SRC\\s+)(ruby)(\\s+(:\\w+)(\\s+.+)?)*$'
            'beginCaptures':
              '1':
                'name': 'punctuation.definition.string.org-mode'
              '2':
                'name': 'code-block.type.org-mode'
              '3':
                'name': 'code-block.code-block-headers.org-mode'
            'end': '^(?i)(\\s*#\\+END_SRC\\s*)$'
            'endCaptures':
              '0':
                'name': 'punctuation.definition.string.org-mode'
            'contentName': 'source.embedded.ruby-org-mode'
            'patterns':[
              {
                'include': 'source.ruby'
              }
            ]
          }
      ]

    'code-block-python':
      'patterns':[
          {
            'begin': '^(\\s*#\\+BEGIN_SRC\\s+)(python)(\\s+(:\\w+)(\\s+.+)?)*$'
            'beginCaptures':
              '1':
                'name': 'punctuation.definition.string.org-mode'
              '2':
                'name': 'code-block.type.org-mode'
              '3':
                'name': 'code-block.code-block-headers.org-mode'
            'end': '^(?i)(\\s*#\\+END_SRC\\s*)$'
            'endCaptures':
              '0':
                'name': 'punctuation.definition.string.org-mode'
            'contentName': 'source.embedded.python-org-mode'
            'patterns':[
              {
                'include': 'source.python'
              }
            ]
          }
      ]

    'code-block-sql':
      'patterns':[
          {
            'begin': '^(\\s*#\\+BEGIN_SRC\\s+)(sql)(\\s+(:\\w+)(\\s+.+)?)*$'
            'beginCaptures':
              '1':
                'name': 'punctuation.definition.string.org-mode'
              '2':
                'name': 'code-block.type.org-mode'
              '3':
                'name': 'code-block.code-block-headers.org-mode'
            'end': '^(?i)(\\s*#\\+END_SRC\\s*)$'
            'endCaptures':
              '0':
                'name': 'punctuation.definition.string.org-mode'
            'contentName': 'source.embedded.sql-org-mode'
            'patterns':[
              {
                'include': 'source.sql'
              }
            ]
          }
      ]
    'code-block-css':
      'patterns':[
          {
            'begin': '^(\\s*#\\+BEGIN_SRC\\s+)(css)(\\s+(:\\w+)(\\s+.+)?)*$'
            'beginCaptures':
              '1':
                'name': 'punctuation.definition.string.org-mode'
              '2':
                'name': 'code-block.type.org-mode'
              '3':
                'name': 'code-block.code-block-headers.org-mode'
            'end': '^(?i)(\\s*#\\+END_SRC\\s*)$'
            'endCaptures':
              '0':
                'name': 'punctuation.definition.string.org-mode'
            'contentName': 'source.embedded.css-org-mode'
            'patterns':[
              {
                'include': 'source.css'
              }
            ]
          }
      ]

    'options-line':
      'patterns': [
        {
          'begin': '^(\\s*#[+])(OPTIONS|TITLE|DATE|AUTHOR|EMAIL|LANGUAGE|CREATOR|SELECT_TAGS|EXCLUDE_TAGS|SETUP|PROPERTY|MACRO)(:)((\\s+)(.+))?'
          'end': '$'
          'captures':
            '1':
              'name': 'punctuation.definition.keyword.org-mode'
            '2':
              'name': 'markup.function.keyword.key-name.org-mode'
            '3':
              'name': 'punctuation.definition.keyword.org-mode'
            '5':
              'name': 'punctuation.definition.keyword.space.org-mode'
            '6':
              'name': 'punctuation.definition.keyword.key-value.org-mode'
          'name': 'markup.keyword.org-mode'
        }
      ]

    'keywords-line':
      'patterns': [
        {
          'begin': '^(\\s*#[+])(HEADER|NAME|PLOT|CAPTION|RESULTS[\\\[\\\]a-f0-9]*)(:)((\\s+)(.+))?'
          'end': '$'
          'captures':
            '1':
              'name': 'punctuation.definition.keyword.org-mode'
            '2':
              'name': 'markup.function.keyword.key-name.org-mode'
            '3':
              'name': 'punctuation.definition.keyword.org-mode'
            '5':
              'name': 'punctuation.definition.keyword.space.org-mode'
            '6':
              'name': 'punctuation.definition.keyword.key-value.org-mode'
          'name': 'markup.keyword.org-mode'
        }
      ]

    'babel-call':
      'patterns': [
        {
          'begin': '^(\\s*#[+])(CALL[\\\[\\\]a-zA-Z0-9,]*)(:)((\\s+)(.+))?'
          'end': '$'
          'captures':
            '1':
              'name': 'punctuation.definition.keyword.org-mode'
            '2':
              'name': 'markup.function.keyword.key-name.org-mode'
            '3':
              'name': 'punctuation.definition.keyword.org-mode'
            '5':
              'name': 'punctuation.definition.keyword.space.org-mode'
            '6':
              'name': 'punctuation.definition.keyword.key-value.org-mode'
          'name': 'markup.keyword.org-mode'
        }
      ]

#+END_SRC

** coffeelint.json                                                :noexport:
:PROPERTIES:
:ID:       05A40356-D779-4E4B-9DDB-14D86B00ED74
:END:

# Tangle file with C-u C-c C-v t

#+BEGIN_SRC javascript :eval never :tangle ../coffeelint.json 
  {
    "max_line_length": {
      "level": "ignore"
    },
    "no_empty_param_list": {
      "level": "error"
    },
    "arrow_spacing": {
      "level": "error"
    },
    "no_interpolation_in_single_quotes": {
      "level": "error"
    },
    "no_debugger": {
      "level": "error"
    },
    "prefer_english_operator": {
      "level": "error"
    },
    "colon_assignment_spacing": {
      "spacing": {
        "left": 0,
        "right": 1
      },
      "level": "error"
    },
    "braces_spacing": {
      "spaces": 0,
      "level": "error"
    },
    "spacing_after_comma": {
      "level": "error"
    },
    "no_stand_alone_at": {
      "level": "error"
    }
  }
#+END_SRC

** package.json                                                   :noexport:

#+NAME: atom-org-mode-package-package-specs
| Property-Name | Property-Value                                                                                                               |
|---------------+------------------------------------------------------------------------------------------------------------------------------|
| name          | org-mode                                                                                                                     |
| version       | 0.3.9                                                                                                                        |
| description   | Atom grammar for org-mode syntax                                                                                             |
| keywords      | org, org-mode, org mode, orgmode, emacs, literate programming, literate devops, devops, reproducible research, documentation |
| repository    | https://github.com/melioratus/org-mode                                                                                       |
| license       | MIT                                                                                                                          |
| engines       | "atom": ">=1.0.0 <2.0.0"                                                                                                     |
| dependencies  | "coffee-script": "1.7.0", "coffeelint": "^1.10.1", "request": "^2.34.0", "season": "^5.0.2", "underscorn-plus": "^1.0.6"     |
#+TBLFM: @5$2='(org-sbe atom-org-mode-package-package-specs-keywords-tblfm-value)::@8$2='(org-sbe atom-org-mode-package-package-specs-engines-tblfm-value)::@9$2='(org-sbe atom-org-mode-package-package-specs-dependencies-tblfm-value)

#+BEGIN_QUOTE
  *Note:* Modify dependencies, engines, keywords, or version values by updating the tables below.
#+END_QUOTE

**** Dependencies

#+NAME: atom-org-mode-package-package-specs-dependencies
| Dependency-Name | Dependency-Versions |
|-----------------+---------------------|
| coffee-script   |               1.7.0 |
| coffeelint      |             ^1.10.1 |
| request         |             ^2.34.0 |
| season          |              ^5.0.2 |
| underscorn-plus |              ^1.0.6 |

***** Code                                                     :noexport:

#+NAME: atom-org-mode-package-package-specs-dependencies-tblfm-value
#+BEGIN_SRC ruby :var data=atom-org-mode-package-package-specs-dependencies :results verbatim    
  result = data.map{|d| %Q'"#{d[0]}": "#{d[1]}"'}
  result.join(", ")
#+END_SRC

#+RESULTS: atom-org-mode-package-package-specs-dependencies-tblfm-value
: "coffee-script": "1.7.0", "coffeelint": "^1.10.1", "request": "^2.34.0", "season": "^5.0.2", "underscorn-plus": "^1.0.6"

**** Engines

#+NAME: atom-org-mode-package-package-specs-engines
| Engine-Name | Engine-Versions |
|-------------+-----------------|
| atom        | >=1.0.0 <2.0.0  |

***** Code                                                     :noexport:

#+NAME: atom-org-mode-package-package-specs-engines-tblfm-value
#+BEGIN_SRC ruby :var data=atom-org-mode-package-package-specs-engines :results verbatim    
  result = data.map{|d| %Q'"#{d[0]}": "#{d[1]}"'}
  result.join(", ")
#+END_SRC

#+RESULTS: atom-org-mode-package-package-specs-engines-tblfm-value
: "atom": ">=1.0.0 <2.0.0"

**** Keywords

#+NAME: atom-org-mode-package-package-specs-keywords
| Keywords              |
|-----------------------|
| org                   |
| org-mode              |
| org mode              |
| orgmode               |
| emacs                 |
| literate programming  |
| literate devops       |
| devops                |
| reproducible research |
| documentation         |

***** Code                                                     :noexport:

#+NAME: atom-org-mode-package-package-specs-keywords-tblfm-value
#+BEGIN_SRC ruby :var data=atom-org-mode-package-package-specs-keywords
  data.flatten().join(', ')
#+END_SRC

#+RESULTS: atom-org-mode-package-package-specs-keywords-tblfm-value
: org, org-mode, org mode, orgmode, emacs, literate programming, literate devops, devops, reproducible research

**** Version

The version property is updated using =apm publish= command.

#+NAME: atom-org-mode-package-package-specs-version
| Property-Name | Property-Value |
|---------------+----------------|
| version       | 0.3.8          |

*** =package.json= File

#+NAME: gen-package.json
#+BEGIN_SRC ruby :file ../package.json :exports results :results scalar replace  :var keywords_data=atom-org-mode-package-package-specs-keywords :var engines_data=atom-org-mode-package-package-specs-engines :var specs_data=atom-org-mode-package-package-specs :var dependencies_data=atom-org-mode-package-package-specs-dependencies
  require 'json'

  result = {}
  engines_hash = {} 
  dependencies_hash = {} 

  specs_data.map{|s| result[s[0]]=s[1]}

  result["keywords"] = keywords_data.flatten()
 
  engines_data.map{|e| engines_hash[e[0]]= e[1]}
  result["engines"] = engines_hash

  dependencies_data.map{|e| dependencies_hash[e[0]]= e[1]}
  result["dependencies"] = dependencies_hash

  JSON.pretty_generate(result)
#+END_SRC

#+RESULTS: gen-package.json
[[file:../package.json]]

** README.md                                                      :noexport:
:PROPERTIES:
:EXPORT_FILE_NAME: ../README.md
:EXPORT_OPTIONS: f:t
:END:

# Export using C-c C-e C-s m m

*** Welcome to Atom =org-mode= Package 

The [[http://org-mode.org][org-mode]] application provides an astounding set of features that can literally[fn:1] change your life for the better!  

Below is just a very small subset of things you can do using a text file + org-mode + emacs:

- Literate Programming[fn:2][fn:3] in over 30 languages. 
- Project, Task and Time Management.
- Data Science 
- Reproducible Research 
- Create and maintain documentation[fn:4] in multiple popular formats including PDF, HTML[fn:5] and Markdown.
- Track and synchronize data across heterogeneous paradigms, technologies and formats including source code, network diagrams, Infrastructure as Code, DevOps[fn:6], databases, servers and services.
- Learn new skills and share complex ideas in a consistent repeatable way.


Let us begin our journey into a better future.

**** Road Map  

 - Provide org-mode syntax highlighting to allow Atom users to easily create and maintain documentation. 

**** Specifications

#+INCLUDE: "atom-org-mode-package.org::atom-org-mode-package-package-specs"

**** Files List

- [[file:package.json][package.json]]
- [[file:coffeelint.json][coffeelint.json]]
- [[file:grammars/org-mode.cson][org-mode.cson]]
- [[file:grammars/shell-unix-bash-org-mode.cson][shell-unix-bash-org-mode.cson]]
- [[file:styles/org-mode.less][org-mode.less]]

*** Footnotes

[fn:1] pun intended

[fn:2] [[https://en.wikipedia.org/wiki/Literate_programming]]

[fn:3] [[http://kitchingroup.cheme.cmu.edu/blog/2014/03/27/Literate-programming-in-python-with-org-mode-and-noweb/]]

[fn:4] [[https://github.com/fniessen/refcard-org-mode]]

[fn:5] [[https://github.com/fniessen/org-html-themes]]

[fn:6] [[http://howardism.org/Technical/Emacs/literate-devops.html]]

* Export Settings                                                  :noexport:

#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:{} arch:headline
#+OPTIONS: author:t broken-links:nil c:nil creator:nil
#+OPTIONS: d:(not "LOGBOOK") date:t e:t email:nil f:t inline:t num:nil
#+OPTIONS: p:nil pri:nil prop:nil stat:t tags:t tasks:t tex:t
#+OPTIONS: timestamp:t title:t toc:nil todo:t |:t
#+TITLE: atom-org-mode-package
#+DATE: <2018-02-25 Sun>
#+AUTHOR: Brian Smith
#+EMAIL: melioratus@Brians-MacBook-Pro.local
#+LANGUAGE: en
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+CREATOR: Emacs 25.3.1 (Org mode 9.1.6)

* Footnotes

[fn:1] [[https://orgmode.org/worg/dev/org-syntax.html]]

[fn:2] [[file:orgmode.org/worg/dev/org-syntax.org]]

