
* Atom org-mode Package

In order to maintain compatibility, the Atom =org-mode= package will follow the syntax specification[fn:1][fn:2] provided on [[http://orgmode.org][orgmode.org]].

* Package Files

- [[file:../README.md][README.md]]

  # Link to [[file:atom-org-mode-package.org::README.md][README.md Section]]

- [[file:../package.json][package.json]]

  # Link to [[file:atom-org-mode-package.org::package.json][package.json Section]]

- [[file:../coffeelint.json][coffeelint.json]]

  # Link to [[file:atom-org-mode-package.org::coffeelint.json][coffeelint.json Section]]

- [[file:../grammars/org-mode.cson][org-mode.cson]]

  # Link to [[file:atom-org-mode-package.org::org-mode.cson][org-mode.cson Section]]

* Exported Files                                                   :noexport:

** grammars

*** org-mode.cson
:PROPERTIES:
:ID:       93C158C1-6209-4A22-9C45-0E46CD7DE030
:END:

# Tangle file with C-u C-c C-v t

#+BEGIN_SRC javascript :eval never :tangle ../grammars/org-mode.cson :mkdirp yes 
  'name': 'Org-Mode Syntax'
  'scopeName': 'source.org-mode'
  'limitLineLength': false
  'fileTypes': [
    'org-mode'
    'org'
  ]
  'patterns': [
    {
      'include': '#comment-line'
    }
    {
      'include': '#comment-block'
    }
    {
      'include': '#example-line'
    }
    {
      'include': '#example-block'
    }
    {
      'include': '#quote-block'
    }
    {
      'include': '#verbatim'
    }
    {
      'include': '#code'
    }
    {
      'include': '#emphasis'
    }
    {
      'include': '#code-block-shell'
    }
    {
      'include': '#code-block-ruby'
    }
    {
      'include': '#code-block-python'
    }
    {
      'include': '#code-block-sql'
    }
    {
      'include': '#code-block-css'
    }
    {
      'include': '#options-line'
    }
    {
      'include': '#keywords-line'
    }
    {
      'include': '#babel-call'
    }

    {
      'begin': '^(\\*{3})(\\*{1})(\\s+)'
      'end': '$'
      'name': 'markup.heading.heading-4.org-mode'
      'captures':
        '1':
          'name': 'leading-star.org-mode'
        '2':
          'name': 'markup.heading.marker.org-mode'
        '3':
          'name': 'markup.heading.space.org-mode'
      'patterns': [
        {
          'include': '#task-status'
        }
        {
          'include': '#code'
        }
        {
          'include': '#verbatim'
        }
        {
          'include': '#emphasis'
        }
      ]
    }

    {
      'begin': '^(\\*{4})(\\*{1})(\\s+)'
      'end': '$'
      'name': 'markup.heading.heading-5.org-mode'
      'captures':
        '1':
          'name': 'leading-star.org-mode'
        '2':
          'name': 'markup.heading.marker.org-mode'
        '3':
          'name': 'markup.heading.space.org-mode'
      'patterns': [
          {
            'include': '#task-status'
          }
          {
            'include': '#code'
          }
          {
            'include': '#verbatim'
          }
          {
            'include': '#emphasis'
          }
        ]
    }

    {
      'begin': '^(\\*{5})(\\*{1})(\\s+)'
      'end': '$'
      'name': 'markup.heading.heading-6.org-mode'
      'captures':
        '1':
          'name': 'leading-star.org-mode'
        '2':
          'name': 'markup.heading.marker.org-mode'
        '3':
          'name': 'markup.heading.space.org-mode'
      'patterns': [
          {
            'include': '#task-status'
          }
          {
            'include': '#code'
          }
          {
            'include': '#verbatim'
          }
          {
            'include': '#emphasis'
          }
        ]
    }

    {
      'begin': '^(\\*{6})(\\*{1})(\\s+)'
      'end': '$'
      'name': 'markup.heading.heading-7.org-mode'
      'captures':
        '1':
          'name': 'leading-star.org-mode'
        '2':
          'name': 'markup.heading.marker.org-mode'
        '3':
          'name': 'markup.heading.space.org-mode'
      'patterns': [
          {
            'include': '#task-status'
          }
          {
            'include': '#code'
          }
          {
            'include': '#verbatim'
          }
          {
            'include': '#emphasis'
          }
        ]
    }
    {
      'begin': '^(-----BEGIN PGP MESSAGE-----)$'
      'end': '^(-----END PGP MESSAGE-----)$'
      'name': 'crypt.pgp.message.string.org-mode'
      'beginCaptures':
        '1':
          'name': 'crypt.pgp.message.begin.string.org-mode'
      'endCaptures':
        '1':
          'name': 'crypt.pgp.message.begin.string.org-mode'
      'patterns': [
      ]
    }


    {
      'match': '^(\\s*\\d+\\.)(\\s+)(([\\\[])([ X-])([\\\]])(\\s))?'
      'captures':
        '1':
          'name': 'variable.ordered.list.org-mode'
        '2':
          'name': 'punctuation.definition.list.space.org-mode'
        '3':
          'name': 'variable.checkbox.list.org-mode'
        '4':
          'name': 'punctuation.definition.checkbox.begin.list.org-mode'
        '5':
          'name': 'checkbox.string.org-mode'
        '6':
          'name': 'punctuation.definition.checkbox.end.list.org-mode'
    }

    {
      'match': '^(\\s+[*]|\\s*[+-])(\\s+)(([\\\[])([ X-])([\\\]])(\\s))?'
      'captures':
        '1':
          'name': 'variable.unordered.list.org-mode'
        '2':
          'name': 'punctuation.definition.list.space.org-mode'
        '3':
          'name': 'variable.checkbox.list.org-mode'
        '4':
          'name': 'punctuation.definition.checkbox.begin.list.org-mode'
        '5':
          'name': 'checkbox.string.org-mode'
        '6':
          'name': 'punctuation.definition.checkbox.end.list.org-mode'
    }

    {
      'begin': '^(?:[ \\t]*)(\\|)'
      'end': '(\\|)?(?:\\s*)$'
      'beginCaptures':
        '1':
          'name': 'border.pipe.outer.org-mode'
      'endCaptures':
        '1':
          'name': 'border.pipe.outer.org-mode'
      'name': 'table.grmtsts'
      'patterns': [
        {
          'match': '(-+(?=[-+|]))([+]?)'
          'captures':
            '1':
              'name': 'border.header.org-mode'
            '2':
              'name': 'border.header.org-mode'
        }
        {
          'match': '\\|'
          'name': 'border.pipe.inner.org-mode'
        }
      ]
    }

    {
      'begin': '^(\\*{1})(\\s+)'
      'end': '$'
      'name': 'markup.heading.heading-1.org-mode'
      'captures':
        '1':
          'name': 'markup.heading.marker.org-mode'
        '2':
          'name': 'markup.heading.space.org-mode'
      'patterns': [
        {
          'include': '#task-status'
        }
        {
          'include': '#code'
        }
        {
          'include': '#verbatim'
        }
        {
          'include': '#emphasis'
        }
      ]
    }

    {
      'begin': '^(\\*{1})(\\*{1})(\\s+)'
      'end': '$'
      'name': 'markup.heading.heading-2.org-mode'
      'captures':
        '1':
          'name': 'leading-star.star-1.org-mode'
        '2':
          'name': 'markup.heading.marker.org-mode'
        '3':
          'name': 'markup.heading.space.org-mode'
      'patterns': [
        {
          'include': '#task-status'
        }
        {
          'include': '#code'
        }
        {
          'include': '#verbatim'
        }
        {
          'include': '#emphasis'
        }
      ]
    }

    {
      'begin': '^(\\*{2})(\\*{1})(\\s+)'
      'end': '$'
      'name': 'markup.heading.heading-3.org-mode'
      'captures':
        '1':
          'name': 'leading-star.org-mode'
        '2':
          'name': 'markup.heading.marker.org-mode'
        '3':
          'name': 'markup.heading.space.org-mode'
      'patterns': [
        {
          'include': '#task-status'
        }
        {
          'include': '#code'
        }
        {
          'include': '#verbatim'
        }
        {
          'include': '#emphasis'
        }
      ]
    }

    {
      'begin': '^(\\*{3})(\\*{1})(\\s+)'
      'end': '$'
      'name': 'markup.heading.heading-4.org-mode'
      'captures':
        '1':
          'name': 'leading-star.org-mode'
        '2':
          'name': 'markup.heading.marker.org-mode'
        '3':
          'name': 'markup.heading.space.org-mode'
      'patterns': [
        {
          'include': '#task-status'
        }
        {
          'include': '#code'
        }
        {
          'include': '#verbatim'
        }
        {
          'include': '#emphasis'
        }
      ]
    }

    {
      'begin': '^(\\*{4})(\\*{1})(\\s+)'
      'end': '$'
      'name': 'markup.heading.heading-5.org-mode'
      'captures':
        '1':
          'name': 'leading-star.org-mode'
        '2':
          'name': 'markup.heading.marker.org-mode'
        '3':
          'name': 'markup.heading.space.org-mode'
      'patterns': [
          {
            'include': '#task-status'
          }
          {
            'include': '#code'
          }
          {
            'include': '#verbatim'
          }
          {
            'include': '#emphasis'
          }
        ]
    }

    {
      'begin': '^(\\*{5})(\\*{1})(\\s+)'
      'end': '$'
      'name': 'markup.heading.heading-6.org-mode'
      'captures':
        '1':
          'name': 'leading-star.org-mode'
        '2':
          'name': 'markup.heading.marker.org-mode'
        '3':
          'name': 'markup.heading.space.org-mode'
      'patterns': [
          {
            'include': '#task-status'
          }
          {
            'include': '#code'
          }
          {
            'include': '#verbatim'
          }
          {
            'include': '#emphasis'
          }
        ]
    }

    {
      'begin': '^(\\*{6})(\\*{1})(\\s+)'
      'end': '$'
      'name': 'markup.heading.heading-7.org-mode'
      'captures':
        '1':
          'name': 'leading-star.org-mode'
        '2':
          'name': 'markup.heading.marker.org-mode'
        '3':
          'name': 'markup.heading.space.org-mode'
      'patterns': [
          {
            'include': '#task-status'
          }
          {
            'include': '#code'
          }
          {
            'include': '#verbatim'
          }
          {
            'include': '#emphasis'
          }
        ]
    }
    {
      'begin': '^(\\*{7})(\\*{1})(\\s+)'
      'end': '$'
      'name': 'markup.heading.heading-8.org-mode'
      'captures':
        '1':
          'name': 'leading-star.org-mode'
        '2':
          'name': 'markup.heading.marker.org-mode'
        '3':
          'name': 'markup.heading.space.org-mode'
      'patterns': [
          {
            'include': '#task-status'
          }
          {
            'include': '#code'
          }
          {
            'include': '#verbatim'
          }
          {
            'include': '#emphasis'
          }
        ]
    }
    {
      'begin': '^(\\*{8})(\\*{1})(\\s+)'
      'end': '$'
      'name': 'markup.heading.heading-9.org-mode'
      'captures':
        '1':
          'name': 'leading-star.org-mode'
        '2':
          'name': 'markup.heading.marker.org-mode'
        '3':
          'name': 'markup.heading.space.org-mode'
      'patterns': [
          {
            'include': '#task-status'
          }
          {
            'include': '#code'
          }
          {
            'include': '#verbatim'
          }
          {
            'include': '#emphasis'
          }
        ]
    }
  ]
  'repository':

    'comment-line':
      'patterns': [
        {
          'begin': '^\\s*#\\s'
          'end': '$'
          'captures':
            '0':
              'name': 'punctuation.definition.comment.org-mode'
          'name': 'comment.line.org-mode'
        }
      ]

    'comment-block':
      'patterns': [
        {
          'begin': '^(?i:\\s*#\\+BEGIN_COMMENT\\s*)'
          'captures':
            '0':
              'name': 'punctuation.definition.comment.org-mode'
          'end': '^(?i:\\s*#\\+END_COMMENT\\s*)'
          'name': 'comment.block.org-mode'
        }
      ]

    'example-line':
      'patterns': [
        {
          'begin': '^\\s*:\\s'
          'end': '$'
          'captures':
            '0':
              'name': 'punctuation.definition.string.org-mode'
          'name': 'string.unquoted.org-mode'
        }
      ]

    'example-block':
      'patterns':[
          {
            'begin': '^(?i:\\s*#\\+BEGIN_EXAMPLE\\s*)'
            'beginCaptures':
              '0':
                'name': 'punctuation.definition.string.org-mode'
            'end': '^(?i:\\s*#\\+END_EXAMPLE\\s*)'
            'endCaptures':
              '0':
                'name': 'punctuation.definition.string.org-mode'
            'contentName': 'string.unquoted.org-mode'
          }
      ]

    'quote-block':
      'patterns': [
        {
          'begin': '^(?i:\\s*#\\+BEGIN_QUOTE\\s*)'
          'beginCaptures':
            '0':
              'name': 'punctuation.definition.quote.org-mode'
          'end': '^(?i:\\s*#\\+END_QUOTE\\s*)'
          'endCaptures':
            '0':
              'name': 'punctuation.definition.quote.org-mode'
          'contentName': 'markup.quote.org-mode'
          'patterns': [
            {
              'include': '#emphasis'
            }
          ]
        }
      ]

    'unordered-list':
      'patterns': [
          {
            'match': '^\\s+([*+-])(\\s+)'
            'captures':
              '1':
                'name': 'punctuation.definition.item.org-mode'
              '2':
                'name': 'punctuation.definition.item.space.org-mode'
          }
      ]

    'emphasis':
      'patterns':[
        {
          'include': '#bold'
        }
        {
          'include': '#italic'
        }
        {
          'include': '#underline'
        }
        {
          'include': '#strike-through'
        }
      ]

    'task-status-todo':
        'patterns': [
            {
              'match': '(?<=[\\\*]\\s)(TODO)\\b'
              'name': 'constant.task.status.todo.org-mode'
            }
        ]

    'task-status-done':
        'patterns': [
            {
              'match': '(?<=[\\\*]\\s)(DONE)\\b'
              'name': 'constant.task.status.done.org-mode'
            }
        ]

    'task-status':
        'patterns': [
            {
              'include': '#task-status-todo'
            }
            {
              'include': '#task-status-done'
            }
        ]

    'code':
        'patterns': [
          {
            'begin': '(?<=^|[^\\w\\d\\~])(\\~)(?!$|\\~|\\s)'
            'beginCaptures':
              '1':
                'name': 'punctuation.definition.character.org-mode'
            'end': '(?<!^|\\s)(\\~)(?=$|[^\\w|\\d])'
            'endCaptures':
              '1':
                'name': 'punctuation.definition.character.org-mode'
            'name': 'markup.raw.code.line.org-mode'

          }
      ]

    'verbatim':
        'patterns': [
          {
            'begin': '(?<=^|[^\\w\\d\\=])(\\=)(?!$|\\=|\\s)'
            'beginCaptures':
              '1':
                'name': 'punctuation.definition.character.org-mode'
            'end': '(?<!^|\\s)(\\=)(?=$|[^\\w|\\d])'
            'endCaptures':
              '1':
                'name': 'punctuation.definition.character.org-mode'
            'name': 'markup.raw.verbatim.org-mode'
          }
      ]

    'bold':
        'patterns': [
          {
            'begin': '(?<=^|[^\\w\\d\\*])(\\*)(?!$|\\*|\\s)'
            'beginCaptures':
              '1':
                'name': 'punctuation.definition.character.org-mode'
            'end': '(?<!^|\\s)(\\*)(?=$|[^\\w|\\d])'
            'endCaptures':
              '1':
                'name': 'punctuation.definition.character.org-mode'
            'name': 'markup.bold.org-mode'
            'patterns': [
              {
                'match': '(&)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)'
                'name': 'constant.character.entity.org-mode'
                'captures':
                  '1':
                    'name': 'punctuation.definition.entity.org-mode'
                  '3':
                    'name': 'punctuation.definition.entity.org-mode'
              }
              {
                'include': '#italic'
              }
              {
                'include': '#underline'
              }
              {
                'include': '#strike-through'
              }
              {
                'include': '#code'
              }
              {
                'include': '#verbatim'
              }
            ]
        }
      ]

    'underline':
      'patterns':[
         {
           'begin': '(?<=^|[^\\w\\d_])(_)(?!$|_|\\s)'
           'beginCaptures':
             '1':
               'name': 'punctuation.definition.character.org-mode'
           'end': '(?<!^|\\s)(_)(?=$|[^\\w|\\d])'
           'endCaptures':
             '1':
               'name': 'punctuation.definition.character.org-mode'
           'name': 'markup.underline.link.org-mode'
           'patterns': [
             {
               'match': '(&)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)'
               'name': 'constant.character.entity.org-mode'
               'captures':
                 '1':
                   'name': 'punctuation.definition.entity.org-mode'
                 '3':
                   'name': 'punctuation.definition.entity.org-mode'
             }
            {
               'include': '#bold'
            }
            {
              'include': '#italic'
            }
            {
              'include': '#strike-through'
            }
            {
              'include': '#code'
            }
            {
              'include': '#verbatim'
            }
           ]
         }

      ]
    'italic':
      'patterns':[
        {
            'begin': '(?<=^|[^\\w\\d\\/])(\\/)(?!$|\\/|\\s)'
            'beginCaptures':
              '1':
                'name': 'punctuation.definition.character.org-mode'
            'end': '(?<!^|\\s)(\\/)(?=$|[^\\w|\\d])'
            'endCaptures':
              '1':
                'name': 'punctuation.definition.character.org-mode'
            'name': 'markup.italic.org-mode'
            'patterns': [
              {
                'match': '(&)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)'
                'name': 'constant.character.entity.org-mode'
                'captures':
                  '1':
                    'name': 'punctuation.definition.entity.org-mode'
                  '3':
                    'name': 'punctuation.definition.entity.org-mode'
              }
              {
                'include': '#bold'
              }
              {
                'include': '#underline'
              }
              {
                'include': '#strike-through'
              }
              {
                'include': '#code'
              }
              {
                'include': '#verbatim'
              }
            ]
          }
      ]

    'strike-through':
      'patterns': [
          {
            'begin': '(?<=^|[^\\w\\d#\\+])(\\+)(?!$|\\+|\\s)'
            'beginCaptures':
              '1':
                'name': 'punctuation.definition.character.org-mode'
            'end': '(?<!^|\\s)(\\+)(?=$|[^\\w|\\d])'
            'endCaptures':
              '1':
                'name': 'punctuation.definition.character.org-mode'
            'name': 'markup.strike.org-mode'
            'patterns': [
              {
                'match': '(&)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)'
                'name': 'constant.character.entity.org-mode'
                'captures':
                  '1':
                    'name': 'punctuation.definition.entity.org-mode'
                  '3':
                    'name': 'punctuation.definition.entity.org-mode'
              }
              {
                'include': '#bold'
              }
              {
                'include': '#italic'
              }
              {
                'include': '#underline'
              }
              {
                'include': '#code'
              }
              {
                'include': '#verbatim'
              }
            ]
          }
      ]

    'code-block-shell':
      'patterns':[
          {
            'begin': '^(\\s*#\\+BEGIN_SRC\\s+)(sh|shell|bash)(\\s+(:\\w+)(\\s+.+)?)*$'
            'beginCaptures':
              '1':
                'name': 'punctuation.definition.string.org-mode'
              '2':
                'name': 'code-block.type.org-mode'
              '3':
                'name': 'code-block.code-block-headers.org-mode'
            'end': '^(?i)(\\s*#\\+END_SRC\\s*)$'
            'endCaptures':
              '0':
                'name': 'punctuation.definition.string.org-mode'
            'contentName': 'source.embedded.shell-org-mode'
            'patterns':[
              {
                'include': 'source.shell-org-mode'
              }
            ]
          }
      ]

    'code-block-ruby':
      'patterns':[
          {
            'begin': '^(\\s*#\\+BEGIN_SRC\\s+)(ruby)(\\s+(:\\w+)(\\s+.+)?)*$'
            'beginCaptures':
              '1':
                'name': 'punctuation.definition.string.org-mode'
              '2':
                'name': 'code-block.type.org-mode'
              '3':
                'name': 'code-block.code-block-headers.org-mode'
            'end': '^(?i)(\\s*#\\+END_SRC\\s*)$'
            'endCaptures':
              '0':
                'name': 'punctuation.definition.string.org-mode'
            'contentName': 'source.embedded.ruby-org-mode'
            'patterns':[
              {
                'include': 'source.ruby'
              }
            ]
          }
      ]

    'code-block-python':
      'patterns':[
          {
            'begin': '^(\\s*#\\+BEGIN_SRC\\s+)(python)(\\s+(:\\w+)(\\s+.+)?)*$'
            'beginCaptures':
              '1':
                'name': 'punctuation.definition.string.org-mode'
              '2':
                'name': 'code-block.type.org-mode'
              '3':
                'name': 'code-block.code-block-headers.org-mode'
            'end': '^(?i)(\\s*#\\+END_SRC\\s*)$'
            'endCaptures':
              '0':
                'name': 'punctuation.definition.string.org-mode'
            'contentName': 'source.embedded.python-org-mode'
            'patterns':[
              {
                'include': 'source.python'
              }
            ]
          }
      ]

    'code-block-sql':
      'patterns':[
          {
            'begin': '^(\\s*#\\+BEGIN_SRC\\s+)(sql)(\\s+(:\\w+)(\\s+.+)?)*$'
            'beginCaptures':
              '1':
                'name': 'punctuation.definition.string.org-mode'
              '2':
                'name': 'code-block.type.org-mode'
              '3':
                'name': 'code-block.code-block-headers.org-mode'
            'end': '^(?i)(\\s*#\\+END_SRC\\s*)$'
            'endCaptures':
              '0':
                'name': 'punctuation.definition.string.org-mode'
            'contentName': 'source.embedded.sql-org-mode'
            'patterns':[
              {
                'include': 'source.sql'
              }
            ]
          }
      ]
    'code-block-css':
      'patterns':[
          {
            'begin': '^(\\s*#\\+BEGIN_SRC\\s+)(css)(\\s+(:\\w+)(\\s+.+)?)*$'
            'beginCaptures':
              '1':
                'name': 'punctuation.definition.string.org-mode'
              '2':
                'name': 'code-block.type.org-mode'
              '3':
                'name': 'code-block.code-block-headers.org-mode'
            'end': '^(?i)(\\s*#\\+END_SRC\\s*)$'
            'endCaptures':
              '0':
                'name': 'punctuation.definition.string.org-mode'
            'contentName': 'source.embedded.css-org-mode'
            'patterns':[
              {
                'include': 'source.css'
              }
            ]
          }
      ]

    'options-line':
      'patterns': [
        {
          'begin': '^(\\s*#[+])(OPTIONS|TITLE|DATE|AUTHOR|EMAIL|LANGUAGE|CREATOR|SELECT_TAGS|EXCLUDE_TAGS|SETUP|PROPERTY|MACRO)(:)((\\s+)(.+))?'
          'end': '$'
          'captures':
            '1':
              'name': 'punctuation.definition.keyword.org-mode'
            '2':
              'name': 'markup.function.keyword.key-name.org-mode'
            '3':
              'name': 'punctuation.definition.keyword.org-mode'
            '5':
              'name': 'punctuation.definition.keyword.space.org-mode'
            '6':
              'name': 'punctuation.definition.keyword.key-value.org-mode'
          'name': 'markup.keyword.org-mode'
        }
      ]

    'keywords-line':
      'patterns': [
        {
          'begin': '^(\\s*#[+])(HEADER|NAME|PLOT|CAPTION|RESULTS[\\\[\\\]a-f0-9]*)(:)((\\s+)(.+))?'
          'end': '$'
          'captures':
            '1':
              'name': 'punctuation.definition.keyword.org-mode'
            '2':
              'name': 'markup.function.keyword.key-name.org-mode'
            '3':
              'name': 'punctuation.definition.keyword.org-mode'
            '5':
              'name': 'punctuation.definition.keyword.space.org-mode'
            '6':
              'name': 'punctuation.definition.keyword.key-value.org-mode'
          'name': 'markup.keyword.org-mode'
        }
      ]

    'babel-call':
      'patterns': [
        {
          'begin': '^(\\s*#[+])(CALL[\\\[\\\]a-zA-Z0-9,]*)(:)((\\s+)(.+))?'
          'end': '$'
          'captures':
            '1':
              'name': 'punctuation.definition.keyword.org-mode'
            '2':
              'name': 'markup.function.keyword.key-name.org-mode'
            '3':
              'name': 'punctuation.definition.keyword.org-mode'
            '5':
              'name': 'punctuation.definition.keyword.space.org-mode'
            '6':
              'name': 'punctuation.definition.keyword.key-value.org-mode'
          'name': 'markup.keyword.org-mode'
        }
      ]

#+END_SRC

** coffeelint.json                                                :noexport:
:PROPERTIES:
:ID:       05A40356-D779-4E4B-9DDB-14D86B00ED74
:END:

# Tangle file with C-u C-c C-v t

#+BEGIN_SRC javascript :eval never :tangle ../coffeelint.json 
  {
    "max_line_length": {
      "level": "ignore"
    },
    "no_empty_param_list": {
      "level": "error"
    },
    "arrow_spacing": {
      "level": "error"
    },
    "no_interpolation_in_single_quotes": {
      "level": "error"
    },
    "no_debugger": {
      "level": "error"
    },
    "prefer_english_operator": {
      "level": "error"
    },
    "colon_assignment_spacing": {
      "spacing": {
        "left": 0,
        "right": 1
      },
      "level": "error"
    },
    "braces_spacing": {
      "spaces": 0,
      "level": "error"
    },
    "spacing_after_comma": {
      "level": "error"
    },
    "no_stand_alone_at": {
      "level": "error"
    }
  }
#+END_SRC

** package.json                                                   :noexport:

#+NAME: atom-org-mode-package-package-specs
| Property-Name | Property-Value                                                                                                               |
|---------------+------------------------------------------------------------------------------------------------------------------------------|
| name          | org-mode                                                                                                                     |
| version       | 0.3.9                                                                                                                        |
| description   | Atom grammar for org-mode syntax                                                                                             |
| keywords      | org, org-mode, org mode, orgmode, emacs, literate programming, literate devops, devops, reproducible research, documentation |
| repository    | https://github.com/melioratus/org-mode                                                                                       |
| license       | MIT                                                                                                                          |
| engines       | "atom": ">=1.0.0 <2.0.0"                                                                                                     |
| dependencies  | "coffee-script": "1.7.0", "coffeelint": "^1.10.1", "request": "^2.34.0", "season": "^5.0.2", "underscorn-plus": "^1.0.6"     |
#+TBLFM: @5$2='(org-sbe atom-org-mode-package-package-specs-keywords-tblfm-value)::@8$2='(org-sbe atom-org-mode-package-package-specs-engines-tblfm-value)::@9$2='(org-sbe atom-org-mode-package-package-specs-dependencies-tblfm-value)

#+BEGIN_QUOTE
  *Note:* Modify dependencies, engines, keywords, or version values by updating the tables below.
#+END_QUOTE

**** Dependencies

#+NAME: atom-org-mode-package-package-specs-dependencies
| Dependency-Name | Dependency-Versions |
|-----------------+---------------------|
| coffee-script   |               1.7.0 |
| coffeelint      |             ^1.10.1 |
| request         |             ^2.34.0 |
| season          |              ^5.0.2 |
| underscorn-plus |              ^1.0.6 |

***** Code                                                     :noexport:

#+NAME: atom-org-mode-package-package-specs-dependencies-tblfm-value
#+BEGIN_SRC ruby :var data=atom-org-mode-package-package-specs-dependencies :results verbatim    
  result = data.map{|d| %Q'"#{d[0]}": "#{d[1]}"'}
  result.join(", ")
#+END_SRC

#+RESULTS: atom-org-mode-package-package-specs-dependencies-tblfm-value
: "coffee-script": "1.7.0", "coffeelint": "^1.10.1", "request": "^2.34.0", "season": "^5.0.2", "underscorn-plus": "^1.0.6"

**** Engines

#+NAME: atom-org-mode-package-package-specs-engines
| Engine-Name | Engine-Versions |
|-------------+-----------------|
| atom        | >=1.0.0 <2.0.0  |

***** Code                                                     :noexport:

#+NAME: atom-org-mode-package-package-specs-engines-tblfm-value
#+BEGIN_SRC ruby :var data=atom-org-mode-package-package-specs-engines :results verbatim    
  result = data.map{|d| %Q'"#{d[0]}": "#{d[1]}"'}
  result.join(", ")
#+END_SRC

#+RESULTS: atom-org-mode-package-package-specs-engines-tblfm-value
: "atom": ">=1.0.0 <2.0.0"

**** Keywords

#+NAME: atom-org-mode-package-package-specs-keywords
| Keywords              |
|-----------------------|
| org                   |
| org-mode              |
| org mode              |
| orgmode               |
| emacs                 |
| literate programming  |
| literate devops       |
| devops                |
| reproducible research |
| documentation         |

***** Code                                                     :noexport:

#+NAME: atom-org-mode-package-package-specs-keywords-tblfm-value
#+BEGIN_SRC ruby :var data=atom-org-mode-package-package-specs-keywords
  data.flatten().join(', ')
#+END_SRC

#+RESULTS: atom-org-mode-package-package-specs-keywords-tblfm-value
: org, org-mode, org mode, orgmode, emacs, literate programming, literate devops, devops, reproducible research

**** Version

The version property is updated using =apm publish= command.

#+NAME: atom-org-mode-package-package-specs-version
| Property-Name | Property-Value |
|---------------+----------------|
| version       | 0.3.8          |

*** =package.json= File

#+NAME: gen-package.json
#+BEGIN_SRC ruby :file ../package.json :exports results :results scalar replace  :var keywords_data=atom-org-mode-package-package-specs-keywords :var engines_data=atom-org-mode-package-package-specs-engines :var specs_data=atom-org-mode-package-package-specs :var dependencies_data=atom-org-mode-package-package-specs-dependencies
  require 'json'

  result = {}
  engines_hash = {} 
  dependencies_hash = {} 

  specs_data.map{|s| result[s[0]]=s[1]}

  result["keywords"] = keywords_data.flatten()
 
  engines_data.map{|e| engines_hash[e[0]]= e[1]}
  result["engines"] = engines_hash

  dependencies_data.map{|e| dependencies_hash[e[0]]= e[1]}
  result["dependencies"] = dependencies_hash

  JSON.pretty_generate(result)
#+END_SRC

#+RESULTS: gen-package.json
[[file:../package.json]]

** README.md                                                      :noexport:
:PROPERTIES:
:EXPORT_FILE_NAME: ../README.md
:EXPORT_OPTIONS: f:t
:END:

# Export using C-c C-e C-s m m

*** Welcome to Atom =org-mode= Package 

The [[http://org-mode.org][org-mode]] application provides an astounding set of features that can literally[fn:1] change your life for the better!  

Below is just a very small subset of things you can do using a text file + org-mode + emacs:

- Literate Programming[fn:2][fn:3] in over 30 languages. 
- Project, Task and Time Management.
- Data Science 
- Reproducible Research 
- Create and maintain documentation[fn:4] in multiple popular formats including PDF, HTML[fn:5] and Markdown.
- Track and synchronize data across heterogeneous paradigms, technologies and formats including source code, network diagrams, Infrastructure as Code, DevOps[fn:6], databases, servers and services.
- Learn new skills and share complex ideas in a consistent repeatable way.


Let us begin our journey into a better future.

**** Road Map  

 - Provide org-mode syntax highlighting to allow Atom users to easily create and maintain documentation. 

**** Specifications

#+INCLUDE: "atom-org-mode-package.org::atom-org-mode-package-package-specs"

**** Files List

- [[file:package.json][package.json]]
- [[file:coffeelint.json][coffeelint.json]]
- [[file:grammars/org-mode.cson][org-mode.cson]]

*** Footnotes

[fn:1] pun intended

[fn:2] [[https://en.wikipedia.org/wiki/Literate_programming]]

[fn:3] [[http://kitchingroup.cheme.cmu.edu/blog/2014/03/27/Literate-programming-in-python-with-org-mode-and-noweb/]]

[fn:4] [[https://github.com/fniessen/refcard-org-mode]]

[fn:5] [[https://github.com/fniessen/org-html-themes]]

[fn:6] [[http://howardism.org/Technical/Emacs/literate-devops.html]]

* Export Settings                                                  :noexport:

#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:{} arch:headline
#+OPTIONS: author:t broken-links:nil c:nil creator:nil
#+OPTIONS: d:(not "LOGBOOK") date:t e:t email:nil f:t inline:t num:nil
#+OPTIONS: p:nil pri:nil prop:nil stat:t tags:t tasks:t tex:t
#+OPTIONS: timestamp:t title:t toc:nil todo:t |:t
#+TITLE: atom-org-mode-package
#+DATE: <2018-02-25 Sun>
#+AUTHOR: Brian Smith
#+EMAIL: melioratus@Brians-MacBook-Pro.local
#+LANGUAGE: en
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+CREATOR: Emacs 25.3.1 (Org mode 9.1.6)

* Footnotes

[fn:1] [[https://orgmode.org/worg/dev/org-syntax.html]]

[fn:2] [[file:orgmode.org/worg/dev/org-syntax.org]]

